/*
 * THIS FILE IS AUTOGENERATED BY build.rs
 * MODIFICATIONS WILL BE OVERWRITTEN
 */

#[derive(Clone, Copy, Eq, PartialEq, Debug)]
pub enum Painting {
    Kebab = 0,
    Aztec = 1,
    Alban = 2,
    Aztec2 = 3,
    Bomb = 4,
    Plant = 5,
    Wasteland = 6,
    Pool = 7,
    Courbet = 8,
    Sea = 9,
    Sunset = 10,
    Creebet = 11,
    Wanderer = 12,
    Graham = 13,
    Match = 14,
    Bust = 15,
    Stage = 16,
    Void = 17,
    SkullAndRoses = 18,
    Wither = 19,
    Fighters = 20,
    Pointer = 21,
    Pigscene = 22,
    BurningSkull = 23,
    Skeleton = 24,
    Earth = 25,
    Wind = 26,
    Water = 27,
    Fire = 28,
    DonkeyKong = 29,
}

use std::convert::TryFrom;
impl TryFrom<u32> for Painting {
    type Error = crate::Error;
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        match value {
            x if x == Self::Kebab as u32 => Ok(Self::Kebab),
            x if x == Self::Aztec as u32 => Ok(Self::Aztec),
            x if x == Self::Alban as u32 => Ok(Self::Alban),
            x if x == Self::Aztec2 as u32 => Ok(Self::Aztec2),
            x if x == Self::Bomb as u32 => Ok(Self::Bomb),
            x if x == Self::Plant as u32 => Ok(Self::Plant),
            x if x == Self::Wasteland as u32 => Ok(Self::Wasteland),
            x if x == Self::Pool as u32 => Ok(Self::Pool),
            x if x == Self::Courbet as u32 => Ok(Self::Courbet),
            x if x == Self::Sea as u32 => Ok(Self::Sea),
            x if x == Self::Sunset as u32 => Ok(Self::Sunset),
            x if x == Self::Creebet as u32 => Ok(Self::Creebet),
            x if x == Self::Wanderer as u32 => Ok(Self::Wanderer),
            x if x == Self::Graham as u32 => Ok(Self::Graham),
            x if x == Self::Match as u32 => Ok(Self::Match),
            x if x == Self::Bust as u32 => Ok(Self::Bust),
            x if x == Self::Stage as u32 => Ok(Self::Stage),
            x if x == Self::Void as u32 => Ok(Self::Void),
            x if x == Self::SkullAndRoses as u32 => Ok(Self::SkullAndRoses),
            x if x == Self::Wither as u32 => Ok(Self::Wither),
            x if x == Self::Fighters as u32 => Ok(Self::Fighters),
            x if x == Self::Pointer as u32 => Ok(Self::Pointer),
            x if x == Self::Pigscene as u32 => Ok(Self::Pigscene),
            x if x == Self::BurningSkull as u32 => Ok(Self::BurningSkull),
            x if x == Self::Skeleton as u32 => Ok(Self::Skeleton),
            x if x == Self::Earth as u32 => Ok(Self::Earth),
            x if x == Self::Wind as u32 => Ok(Self::Wind),
            x if x == Self::Water as u32 => Ok(Self::Water),
            x if x == Self::Fire as u32 => Ok(Self::Fire),
            x if x == Self::DonkeyKong as u32 => Ok(Self::DonkeyKong),
            _ => Err(Self::Error::EnumOutOfBound)
        }
    }
}
