/*
 * THIS FILE IS AUTOGENERATED BY build.rs
 * MODIFICATIONS WILL BE OVERWRITTEN
 */
/// This represents the block's ID, **NOT** the blockstate ID!
#[derive(Clone, Copy, Eq, PartialEq, Debug)]
pub enum Block {
    Air = 0,
    Stone = 1,
    Granite = 2,
    PolishedGranite = 3,
    Diorite = 4,
    PolishedDiorite = 5,
    Andesite = 6,
    PolishedAndesite = 7,
    GrassBlock = 8,
    Dirt = 9,
    CoarseDirt = 10,
    Podzol = 11,
    Cobblestone = 12,
    OakPlanks = 13,
    SprucePlanks = 14,
    BirchPlanks = 15,
    JunglePlanks = 16,
    AcaciaPlanks = 17,
    DarkOakPlanks = 18,
    MangrovePlanks = 19,
    OakSapling = 20,
    SpruceSapling = 21,
    BirchSapling = 22,
    JungleSapling = 23,
    AcaciaSapling = 24,
    DarkOakSapling = 25,
    MangrovePropagule = 26,
    Bedrock = 27,
    Water = 28,
    Lava = 29,
    Sand = 30,
    RedSand = 31,
    Gravel = 32,
    GoldOre = 33,
    DeepslateGoldOre = 34,
    IronOre = 35,
    DeepslateIronOre = 36,
    CoalOre = 37,
    DeepslateCoalOre = 38,
    NetherGoldOre = 39,
    OakLog = 40,
    SpruceLog = 41,
    BirchLog = 42,
    JungleLog = 43,
    AcaciaLog = 44,
    DarkOakLog = 45,
    MangroveLog = 46,
    MangroveRoots = 47,
    MuddyMangroveRoots = 48,
    StrippedSpruceLog = 49,
    StrippedBirchLog = 50,
    StrippedJungleLog = 51,
    StrippedAcaciaLog = 52,
    StrippedDarkOakLog = 53,
    StrippedOakLog = 54,
    StrippedMangroveLog = 55,
    OakWood = 56,
    SpruceWood = 57,
    BirchWood = 58,
    JungleWood = 59,
    AcaciaWood = 60,
    DarkOakWood = 61,
    MangroveWood = 62,
    StrippedOakWood = 63,
    StrippedSpruceWood = 64,
    StrippedBirchWood = 65,
    StrippedJungleWood = 66,
    StrippedAcaciaWood = 67,
    StrippedDarkOakWood = 68,
    StrippedMangroveWood = 69,
    OakLeaves = 70,
    SpruceLeaves = 71,
    BirchLeaves = 72,
    JungleLeaves = 73,
    AcaciaLeaves = 74,
    DarkOakLeaves = 75,
    MangroveLeaves = 76,
    AzaleaLeaves = 77,
    FloweringAzaleaLeaves = 78,
    Sponge = 79,
    WetSponge = 80,
    Glass = 81,
    LapisOre = 82,
    DeepslateLapisOre = 83,
    LapisBlock = 84,
    Dispenser = 85,
    Sandstone = 86,
    ChiseledSandstone = 87,
    CutSandstone = 88,
    NoteBlock = 89,
    WhiteBed = 90,
    OrangeBed = 91,
    MagentaBed = 92,
    LightBlueBed = 93,
    YellowBed = 94,
    LimeBed = 95,
    PinkBed = 96,
    GrayBed = 97,
    LightGrayBed = 98,
    CyanBed = 99,
    PurpleBed = 100,
    BlueBed = 101,
    BrownBed = 102,
    GreenBed = 103,
    RedBed = 104,
    BlackBed = 105,
    PoweredRail = 106,
    DetectorRail = 107,
    StickyPiston = 108,
    Cobweb = 109,
    Grass = 110,
    Fern = 111,
    DeadBush = 112,
    Seagrass = 113,
    TallSeagrass = 114,
    Piston = 115,
    PistonHead = 116,
    WhiteWool = 117,
    OrangeWool = 118,
    MagentaWool = 119,
    LightBlueWool = 120,
    YellowWool = 121,
    LimeWool = 122,
    PinkWool = 123,
    GrayWool = 124,
    LightGrayWool = 125,
    CyanWool = 126,
    PurpleWool = 127,
    BlueWool = 128,
    BrownWool = 129,
    GreenWool = 130,
    RedWool = 131,
    BlackWool = 132,
    MovingPiston = 133,
    Dandelion = 134,
    Poppy = 135,
    BlueOrchid = 136,
    Allium = 137,
    AzureBluet = 138,
    RedTulip = 139,
    OrangeTulip = 140,
    WhiteTulip = 141,
    PinkTulip = 142,
    OxeyeDaisy = 143,
    Cornflower = 144,
    WitherRose = 145,
    LilyOfTheValley = 146,
    BrownMushroom = 147,
    RedMushroom = 148,
    GoldBlock = 149,
    IronBlock = 150,
    Bricks = 151,
    Tnt = 152,
    Bookshelf = 153,
    MossyCobblestone = 154,
    Obsidian = 155,
    Torch = 156,
    WallTorch = 157,
    Fire = 158,
    SoulFire = 159,
    Spawner = 160,
    OakStairs = 161,
    Chest = 162,
    RedstoneWire = 163,
    DiamondOre = 164,
    DeepslateDiamondOre = 165,
    DiamondBlock = 166,
    CraftingTable = 167,
    Wheat = 168,
    Farmland = 169,
    Furnace = 170,
    OakSign = 171,
    SpruceSign = 172,
    BirchSign = 173,
    AcaciaSign = 174,
    JungleSign = 175,
    DarkOakSign = 176,
    MangroveSign = 177,
    OakDoor = 178,
    Ladder = 179,
    Rail = 180,
    CobblestoneStairs = 181,
    OakWallSign = 182,
    SpruceWallSign = 183,
    BirchWallSign = 184,
    AcaciaWallSign = 185,
    JungleWallSign = 186,
    DarkOakWallSign = 187,
    MangroveWallSign = 188,
    Lever = 189,
    StonePressurePlate = 190,
    IronDoor = 191,
    OakPressurePlate = 192,
    SprucePressurePlate = 193,
    BirchPressurePlate = 194,
    JunglePressurePlate = 195,
    AcaciaPressurePlate = 196,
    DarkOakPressurePlate = 197,
    MangrovePressurePlate = 198,
    RedstoneOre = 199,
    DeepslateRedstoneOre = 200,
    RedstoneTorch = 201,
    RedstoneWallTorch = 202,
    StoneButton = 203,
    Snow = 204,
    Ice = 205,
    SnowBlock = 206,
    Cactus = 207,
    Clay = 208,
    SugarCane = 209,
    Jukebox = 210,
    OakFence = 211,
    Pumpkin = 212,
    Netherrack = 213,
    SoulSand = 214,
    SoulSoil = 215,
    Basalt = 216,
    PolishedBasalt = 217,
    SoulTorch = 218,
    SoulWallTorch = 219,
    Glowstone = 220,
    NetherPortal = 221,
    CarvedPumpkin = 222,
    JackOLantern = 223,
    Cake = 224,
    Repeater = 225,
    WhiteStainedGlass = 226,
    OrangeStainedGlass = 227,
    MagentaStainedGlass = 228,
    LightBlueStainedGlass = 229,
    YellowStainedGlass = 230,
    LimeStainedGlass = 231,
    PinkStainedGlass = 232,
    GrayStainedGlass = 233,
    LightGrayStainedGlass = 234,
    CyanStainedGlass = 235,
    PurpleStainedGlass = 236,
    BlueStainedGlass = 237,
    BrownStainedGlass = 238,
    GreenStainedGlass = 239,
    RedStainedGlass = 240,
    BlackStainedGlass = 241,
    OakTrapdoor = 242,
    SpruceTrapdoor = 243,
    BirchTrapdoor = 244,
    JungleTrapdoor = 245,
    AcaciaTrapdoor = 246,
    DarkOakTrapdoor = 247,
    MangroveTrapdoor = 248,
    StoneBricks = 249,
    MossyStoneBricks = 250,
    CrackedStoneBricks = 251,
    ChiseledStoneBricks = 252,
    PackedMud = 253,
    MudBricks = 254,
    InfestedStone = 255,
    InfestedCobblestone = 256,
    InfestedStoneBricks = 257,
    InfestedMossyStoneBricks = 258,
    InfestedCrackedStoneBricks = 259,
    InfestedChiseledStoneBricks = 260,
    BrownMushroomBlock = 261,
    RedMushroomBlock = 262,
    MushroomStem = 263,
    IronBars = 264,
    Chain = 265,
    GlassPane = 266,
    Melon = 267,
    AttachedPumpkinStem = 268,
    AttachedMelonStem = 269,
    PumpkinStem = 270,
    MelonStem = 271,
    Vine = 272,
    GlowLichen = 273,
    OakFenceGate = 274,
    BrickStairs = 275,
    StoneBrickStairs = 276,
    MudBrickStairs = 277,
    Mycelium = 278,
    LilyPad = 279,
    NetherBricks = 280,
    NetherBrickFence = 281,
    NetherBrickStairs = 282,
    NetherWart = 283,
    EnchantingTable = 284,
    BrewingStand = 285,
    Cauldron = 286,
    WaterCauldron = 287,
    LavaCauldron = 288,
    PowderSnowCauldron = 289,
    EndPortal = 290,
    EndPortalFrame = 291,
    EndStone = 292,
    DragonEgg = 293,
    RedstoneLamp = 294,
    Cocoa = 295,
    SandstoneStairs = 296,
    EmeraldOre = 297,
    DeepslateEmeraldOre = 298,
    EnderChest = 299,
    TripwireHook = 300,
    Tripwire = 301,
    EmeraldBlock = 302,
    SpruceStairs = 303,
    BirchStairs = 304,
    JungleStairs = 305,
    CommandBlock = 306,
    Beacon = 307,
    CobblestoneWall = 308,
    MossyCobblestoneWall = 309,
    FlowerPot = 310,
    PottedOakSapling = 311,
    PottedSpruceSapling = 312,
    PottedBirchSapling = 313,
    PottedJungleSapling = 314,
    PottedAcaciaSapling = 315,
    PottedDarkOakSapling = 316,
    PottedMangrovePropagule = 317,
    PottedFern = 318,
    PottedDandelion = 319,
    PottedPoppy = 320,
    PottedBlueOrchid = 321,
    PottedAllium = 322,
    PottedAzureBluet = 323,
    PottedRedTulip = 324,
    PottedOrangeTulip = 325,
    PottedWhiteTulip = 326,
    PottedPinkTulip = 327,
    PottedOxeyeDaisy = 328,
    PottedCornflower = 329,
    PottedLilyOfTheValley = 330,
    PottedWitherRose = 331,
    PottedRedMushroom = 332,
    PottedBrownMushroom = 333,
    PottedDeadBush = 334,
    PottedCactus = 335,
    Carrots = 336,
    Potatoes = 337,
    OakButton = 338,
    SpruceButton = 339,
    BirchButton = 340,
    JungleButton = 341,
    AcaciaButton = 342,
    DarkOakButton = 343,
    MangroveButton = 344,
    SkeletonSkull = 345,
    SkeletonWallSkull = 346,
    WitherSkeletonSkull = 347,
    WitherSkeletonWallSkull = 348,
    ZombieHead = 349,
    ZombieWallHead = 350,
    PlayerHead = 351,
    PlayerWallHead = 352,
    CreeperHead = 353,
    CreeperWallHead = 354,
    DragonHead = 355,
    DragonWallHead = 356,
    Anvil = 357,
    ChippedAnvil = 358,
    DamagedAnvil = 359,
    TrappedChest = 360,
    LightWeightedPressurePlate = 361,
    HeavyWeightedPressurePlate = 362,
    Comparator = 363,
    DaylightDetector = 364,
    RedstoneBlock = 365,
    NetherQuartzOre = 366,
    Hopper = 367,
    QuartzBlock = 368,
    ChiseledQuartzBlock = 369,
    QuartzPillar = 370,
    QuartzStairs = 371,
    ActivatorRail = 372,
    Dropper = 373,
    WhiteTerracotta = 374,
    OrangeTerracotta = 375,
    MagentaTerracotta = 376,
    LightBlueTerracotta = 377,
    YellowTerracotta = 378,
    LimeTerracotta = 379,
    PinkTerracotta = 380,
    GrayTerracotta = 381,
    LightGrayTerracotta = 382,
    CyanTerracotta = 383,
    PurpleTerracotta = 384,
    BlueTerracotta = 385,
    BrownTerracotta = 386,
    GreenTerracotta = 387,
    RedTerracotta = 388,
    BlackTerracotta = 389,
    WhiteStainedGlassPane = 390,
    OrangeStainedGlassPane = 391,
    MagentaStainedGlassPane = 392,
    LightBlueStainedGlassPane = 393,
    YellowStainedGlassPane = 394,
    LimeStainedGlassPane = 395,
    PinkStainedGlassPane = 396,
    GrayStainedGlassPane = 397,
    LightGrayStainedGlassPane = 398,
    CyanStainedGlassPane = 399,
    PurpleStainedGlassPane = 400,
    BlueStainedGlassPane = 401,
    BrownStainedGlassPane = 402,
    GreenStainedGlassPane = 403,
    RedStainedGlassPane = 404,
    BlackStainedGlassPane = 405,
    AcaciaStairs = 406,
    DarkOakStairs = 407,
    MangroveStairs = 408,
    SlimeBlock = 409,
    Barrier = 410,
    Light = 411,
    IronTrapdoor = 412,
    Prismarine = 413,
    PrismarineBricks = 414,
    DarkPrismarine = 415,
    PrismarineStairs = 416,
    PrismarineBrickStairs = 417,
    DarkPrismarineStairs = 418,
    PrismarineSlab = 419,
    PrismarineBrickSlab = 420,
    DarkPrismarineSlab = 421,
    SeaLantern = 422,
    HayBlock = 423,
    WhiteCarpet = 424,
    OrangeCarpet = 425,
    MagentaCarpet = 426,
    LightBlueCarpet = 427,
    YellowCarpet = 428,
    LimeCarpet = 429,
    PinkCarpet = 430,
    GrayCarpet = 431,
    LightGrayCarpet = 432,
    CyanCarpet = 433,
    PurpleCarpet = 434,
    BlueCarpet = 435,
    BrownCarpet = 436,
    GreenCarpet = 437,
    RedCarpet = 438,
    BlackCarpet = 439,
    Terracotta = 440,
    CoalBlock = 441,
    PackedIce = 442,
    Sunflower = 443,
    Lilac = 444,
    RoseBush = 445,
    Peony = 446,
    TallGrass = 447,
    LargeFern = 448,
    WhiteBanner = 449,
    OrangeBanner = 450,
    MagentaBanner = 451,
    LightBlueBanner = 452,
    YellowBanner = 453,
    LimeBanner = 454,
    PinkBanner = 455,
    GrayBanner = 456,
    LightGrayBanner = 457,
    CyanBanner = 458,
    PurpleBanner = 459,
    BlueBanner = 460,
    BrownBanner = 461,
    GreenBanner = 462,
    RedBanner = 463,
    BlackBanner = 464,
    WhiteWallBanner = 465,
    OrangeWallBanner = 466,
    MagentaWallBanner = 467,
    LightBlueWallBanner = 468,
    YellowWallBanner = 469,
    LimeWallBanner = 470,
    PinkWallBanner = 471,
    GrayWallBanner = 472,
    LightGrayWallBanner = 473,
    CyanWallBanner = 474,
    PurpleWallBanner = 475,
    BlueWallBanner = 476,
    BrownWallBanner = 477,
    GreenWallBanner = 478,
    RedWallBanner = 479,
    BlackWallBanner = 480,
    RedSandstone = 481,
    ChiseledRedSandstone = 482,
    CutRedSandstone = 483,
    RedSandstoneStairs = 484,
    OakSlab = 485,
    SpruceSlab = 486,
    BirchSlab = 487,
    JungleSlab = 488,
    AcaciaSlab = 489,
    DarkOakSlab = 490,
    MangroveSlab = 491,
    StoneSlab = 492,
    SmoothStoneSlab = 493,
    SandstoneSlab = 494,
    CutSandstoneSlab = 495,
    PetrifiedOakSlab = 496,
    CobblestoneSlab = 497,
    BrickSlab = 498,
    StoneBrickSlab = 499,
    MudBrickSlab = 500,
    NetherBrickSlab = 501,
    QuartzSlab = 502,
    RedSandstoneSlab = 503,
    CutRedSandstoneSlab = 504,
    PurpurSlab = 505,
    SmoothStone = 506,
    SmoothSandstone = 507,
    SmoothQuartz = 508,
    SmoothRedSandstone = 509,
    SpruceFenceGate = 510,
    BirchFenceGate = 511,
    JungleFenceGate = 512,
    AcaciaFenceGate = 513,
    DarkOakFenceGate = 514,
    MangroveFenceGate = 515,
    SpruceFence = 516,
    BirchFence = 517,
    JungleFence = 518,
    AcaciaFence = 519,
    DarkOakFence = 520,
    MangroveFence = 521,
    SpruceDoor = 522,
    BirchDoor = 523,
    JungleDoor = 524,
    AcaciaDoor = 525,
    DarkOakDoor = 526,
    MangroveDoor = 527,
    EndRod = 528,
    ChorusPlant = 529,
    ChorusFlower = 530,
    PurpurBlock = 531,
    PurpurPillar = 532,
    PurpurStairs = 533,
    EndStoneBricks = 534,
    Beetroots = 535,
    DirtPath = 536,
    EndGateway = 537,
    RepeatingCommandBlock = 538,
    ChainCommandBlock = 539,
    FrostedIce = 540,
    MagmaBlock = 541,
    NetherWartBlock = 542,
    RedNetherBricks = 543,
    BoneBlock = 544,
    StructureVoid = 545,
    Observer = 546,
    ShulkerBox = 547,
    WhiteShulkerBox = 548,
    OrangeShulkerBox = 549,
    MagentaShulkerBox = 550,
    LightBlueShulkerBox = 551,
    YellowShulkerBox = 552,
    LimeShulkerBox = 553,
    PinkShulkerBox = 554,
    GrayShulkerBox = 555,
    LightGrayShulkerBox = 556,
    CyanShulkerBox = 557,
    PurpleShulkerBox = 558,
    BlueShulkerBox = 559,
    BrownShulkerBox = 560,
    GreenShulkerBox = 561,
    RedShulkerBox = 562,
    BlackShulkerBox = 563,
    WhiteGlazedTerracotta = 564,
    OrangeGlazedTerracotta = 565,
    MagentaGlazedTerracotta = 566,
    LightBlueGlazedTerracotta = 567,
    YellowGlazedTerracotta = 568,
    LimeGlazedTerracotta = 569,
    PinkGlazedTerracotta = 570,
    GrayGlazedTerracotta = 571,
    LightGrayGlazedTerracotta = 572,
    CyanGlazedTerracotta = 573,
    PurpleGlazedTerracotta = 574,
    BlueGlazedTerracotta = 575,
    BrownGlazedTerracotta = 576,
    GreenGlazedTerracotta = 577,
    RedGlazedTerracotta = 578,
    BlackGlazedTerracotta = 579,
    WhiteConcrete = 580,
    OrangeConcrete = 581,
    MagentaConcrete = 582,
    LightBlueConcrete = 583,
    YellowConcrete = 584,
    LimeConcrete = 585,
    PinkConcrete = 586,
    GrayConcrete = 587,
    LightGrayConcrete = 588,
    CyanConcrete = 589,
    PurpleConcrete = 590,
    BlueConcrete = 591,
    BrownConcrete = 592,
    GreenConcrete = 593,
    RedConcrete = 594,
    BlackConcrete = 595,
    WhiteConcretePowder = 596,
    OrangeConcretePowder = 597,
    MagentaConcretePowder = 598,
    LightBlueConcretePowder = 599,
    YellowConcretePowder = 600,
    LimeConcretePowder = 601,
    PinkConcretePowder = 602,
    GrayConcretePowder = 603,
    LightGrayConcretePowder = 604,
    CyanConcretePowder = 605,
    PurpleConcretePowder = 606,
    BlueConcretePowder = 607,
    BrownConcretePowder = 608,
    GreenConcretePowder = 609,
    RedConcretePowder = 610,
    BlackConcretePowder = 611,
    Kelp = 612,
    KelpPlant = 613,
    DriedKelpBlock = 614,
    TurtleEgg = 615,
    DeadTubeCoralBlock = 616,
    DeadBrainCoralBlock = 617,
    DeadBubbleCoralBlock = 618,
    DeadFireCoralBlock = 619,
    DeadHornCoralBlock = 620,
    TubeCoralBlock = 621,
    BrainCoralBlock = 622,
    BubbleCoralBlock = 623,
    FireCoralBlock = 624,
    HornCoralBlock = 625,
    DeadTubeCoral = 626,
    DeadBrainCoral = 627,
    DeadBubbleCoral = 628,
    DeadFireCoral = 629,
    DeadHornCoral = 630,
    TubeCoral = 631,
    BrainCoral = 632,
    BubbleCoral = 633,
    FireCoral = 634,
    HornCoral = 635,
    DeadTubeCoralFan = 636,
    DeadBrainCoralFan = 637,
    DeadBubbleCoralFan = 638,
    DeadFireCoralFan = 639,
    DeadHornCoralFan = 640,
    TubeCoralFan = 641,
    BrainCoralFan = 642,
    BubbleCoralFan = 643,
    FireCoralFan = 644,
    HornCoralFan = 645,
    DeadTubeCoralWallFan = 646,
    DeadBrainCoralWallFan = 647,
    DeadBubbleCoralWallFan = 648,
    DeadFireCoralWallFan = 649,
    DeadHornCoralWallFan = 650,
    TubeCoralWallFan = 651,
    BrainCoralWallFan = 652,
    BubbleCoralWallFan = 653,
    FireCoralWallFan = 654,
    HornCoralWallFan = 655,
    SeaPickle = 656,
    BlueIce = 657,
    Conduit = 658,
    BambooSapling = 659,
    Bamboo = 660,
    PottedBamboo = 661,
    VoidAir = 662,
    CaveAir = 663,
    BubbleColumn = 664,
    PolishedGraniteStairs = 665,
    SmoothRedSandstoneStairs = 666,
    MossyStoneBrickStairs = 667,
    PolishedDioriteStairs = 668,
    MossyCobblestoneStairs = 669,
    EndStoneBrickStairs = 670,
    StoneStairs = 671,
    SmoothSandstoneStairs = 672,
    SmoothQuartzStairs = 673,
    GraniteStairs = 674,
    AndesiteStairs = 675,
    RedNetherBrickStairs = 676,
    PolishedAndesiteStairs = 677,
    DioriteStairs = 678,
    PolishedGraniteSlab = 679,
    SmoothRedSandstoneSlab = 680,
    MossyStoneBrickSlab = 681,
    PolishedDioriteSlab = 682,
    MossyCobblestoneSlab = 683,
    EndStoneBrickSlab = 684,
    SmoothSandstoneSlab = 685,
    SmoothQuartzSlab = 686,
    GraniteSlab = 687,
    AndesiteSlab = 688,
    RedNetherBrickSlab = 689,
    PolishedAndesiteSlab = 690,
    DioriteSlab = 691,
    BrickWall = 692,
    PrismarineWall = 693,
    RedSandstoneWall = 694,
    MossyStoneBrickWall = 695,
    GraniteWall = 696,
    StoneBrickWall = 697,
    MudBrickWall = 698,
    NetherBrickWall = 699,
    AndesiteWall = 700,
    RedNetherBrickWall = 701,
    SandstoneWall = 702,
    EndStoneBrickWall = 703,
    DioriteWall = 704,
    Scaffolding = 705,
    Loom = 706,
    Barrel = 707,
    Smoker = 708,
    BlastFurnace = 709,
    CartographyTable = 710,
    FletchingTable = 711,
    Grindstone = 712,
    Lectern = 713,
    SmithingTable = 714,
    Stonecutter = 715,
    Bell = 716,
    Lantern = 717,
    SoulLantern = 718,
    Campfire = 719,
    SoulCampfire = 720,
    SweetBerryBush = 721,
    WarpedStem = 722,
    StrippedWarpedStem = 723,
    WarpedHyphae = 724,
    StrippedWarpedHyphae = 725,
    WarpedNylium = 726,
    WarpedFungus = 727,
    WarpedWartBlock = 728,
    WarpedRoots = 729,
    NetherSprouts = 730,
    CrimsonStem = 731,
    StrippedCrimsonStem = 732,
    CrimsonHyphae = 733,
    StrippedCrimsonHyphae = 734,
    CrimsonNylium = 735,
    CrimsonFungus = 736,
    Shroomlight = 737,
    WeepingVines = 738,
    WeepingVinesPlant = 739,
    TwistingVines = 740,
    TwistingVinesPlant = 741,
    CrimsonRoots = 742,
    CrimsonPlanks = 743,
    WarpedPlanks = 744,
    CrimsonSlab = 745,
    WarpedSlab = 746,
    CrimsonPressurePlate = 747,
    WarpedPressurePlate = 748,
    CrimsonFence = 749,
    WarpedFence = 750,
    CrimsonTrapdoor = 751,
    WarpedTrapdoor = 752,
    CrimsonFenceGate = 753,
    WarpedFenceGate = 754,
    CrimsonStairs = 755,
    WarpedStairs = 756,
    CrimsonButton = 757,
    WarpedButton = 758,
    CrimsonDoor = 759,
    WarpedDoor = 760,
    CrimsonSign = 761,
    WarpedSign = 762,
    CrimsonWallSign = 763,
    WarpedWallSign = 764,
    StructureBlock = 765,
    Jigsaw = 766,
    Composter = 767,
    Target = 768,
    BeeNest = 769,
    Beehive = 770,
    HoneyBlock = 771,
    HoneycombBlock = 772,
    NetheriteBlock = 773,
    AncientDebris = 774,
    CryingObsidian = 775,
    RespawnAnchor = 776,
    PottedCrimsonFungus = 777,
    PottedWarpedFungus = 778,
    PottedCrimsonRoots = 779,
    PottedWarpedRoots = 780,
    Lodestone = 781,
    Blackstone = 782,
    BlackstoneStairs = 783,
    BlackstoneWall = 784,
    BlackstoneSlab = 785,
    PolishedBlackstone = 786,
    PolishedBlackstoneBricks = 787,
    CrackedPolishedBlackstoneBricks = 788,
    ChiseledPolishedBlackstone = 789,
    PolishedBlackstoneBrickSlab = 790,
    PolishedBlackstoneBrickStairs = 791,
    PolishedBlackstoneBrickWall = 792,
    GildedBlackstone = 793,
    PolishedBlackstoneStairs = 794,
    PolishedBlackstoneSlab = 795,
    PolishedBlackstonePressurePlate = 796,
    PolishedBlackstoneButton = 797,
    PolishedBlackstoneWall = 798,
    ChiseledNetherBricks = 799,
    CrackedNetherBricks = 800,
    QuartzBricks = 801,
    Candle = 802,
    WhiteCandle = 803,
    OrangeCandle = 804,
    MagentaCandle = 805,
    LightBlueCandle = 806,
    YellowCandle = 807,
    LimeCandle = 808,
    PinkCandle = 809,
    GrayCandle = 810,
    LightGrayCandle = 811,
    CyanCandle = 812,
    PurpleCandle = 813,
    BlueCandle = 814,
    BrownCandle = 815,
    GreenCandle = 816,
    RedCandle = 817,
    BlackCandle = 818,
    CandleCake = 819,
    WhiteCandleCake = 820,
    OrangeCandleCake = 821,
    MagentaCandleCake = 822,
    LightBlueCandleCake = 823,
    YellowCandleCake = 824,
    LimeCandleCake = 825,
    PinkCandleCake = 826,
    GrayCandleCake = 827,
    LightGrayCandleCake = 828,
    CyanCandleCake = 829,
    PurpleCandleCake = 830,
    BlueCandleCake = 831,
    BrownCandleCake = 832,
    GreenCandleCake = 833,
    RedCandleCake = 834,
    BlackCandleCake = 835,
    AmethystBlock = 836,
    BuddingAmethyst = 837,
    AmethystCluster = 838,
    LargeAmethystBud = 839,
    MediumAmethystBud = 840,
    SmallAmethystBud = 841,
    Tuff = 842,
    Calcite = 843,
    TintedGlass = 844,
    PowderSnow = 845,
    SculkSensor = 846,
    Sculk = 847,
    SculkVein = 848,
    SculkCatalyst = 849,
    SculkShrieker = 850,
    OxidizedCopper = 851,
    WeatheredCopper = 852,
    ExposedCopper = 853,
    CopperBlock = 854,
    CopperOre = 855,
    DeepslateCopperOre = 856,
    OxidizedCutCopper = 857,
    WeatheredCutCopper = 858,
    ExposedCutCopper = 859,
    CutCopper = 860,
    OxidizedCutCopperStairs = 861,
    WeatheredCutCopperStairs = 862,
    ExposedCutCopperStairs = 863,
    CutCopperStairs = 864,
    OxidizedCutCopperSlab = 865,
    WeatheredCutCopperSlab = 866,
    ExposedCutCopperSlab = 867,
    CutCopperSlab = 868,
    WaxedCopperBlock = 869,
    WaxedWeatheredCopper = 870,
    WaxedExposedCopper = 871,
    WaxedOxidizedCopper = 872,
    WaxedOxidizedCutCopper = 873,
    WaxedWeatheredCutCopper = 874,
    WaxedExposedCutCopper = 875,
    WaxedCutCopper = 876,
    WaxedOxidizedCutCopperStairs = 877,
    WaxedWeatheredCutCopperStairs = 878,
    WaxedExposedCutCopperStairs = 879,
    WaxedCutCopperStairs = 880,
    WaxedOxidizedCutCopperSlab = 881,
    WaxedWeatheredCutCopperSlab = 882,
    WaxedExposedCutCopperSlab = 883,
    WaxedCutCopperSlab = 884,
    LightningRod = 885,
    PointedDripstone = 886,
    DripstoneBlock = 887,
    CaveVines = 888,
    CaveVinesPlant = 889,
    SporeBlossom = 890,
    Azalea = 891,
    FloweringAzalea = 892,
    MossCarpet = 893,
    MossBlock = 894,
    BigDripleaf = 895,
    BigDripleafStem = 896,
    SmallDripleaf = 897,
    HangingRoots = 898,
    RootedDirt = 899,
    Mud = 900,
    Deepslate = 901,
    CobbledDeepslate = 902,
    CobbledDeepslateStairs = 903,
    CobbledDeepslateSlab = 904,
    CobbledDeepslateWall = 905,
    PolishedDeepslate = 906,
    PolishedDeepslateStairs = 907,
    PolishedDeepslateSlab = 908,
    PolishedDeepslateWall = 909,
    DeepslateTiles = 910,
    DeepslateTileStairs = 911,
    DeepslateTileSlab = 912,
    DeepslateTileWall = 913,
    DeepslateBricks = 914,
    DeepslateBrickStairs = 915,
    DeepslateBrickSlab = 916,
    DeepslateBrickWall = 917,
    ChiseledDeepslate = 918,
    CrackedDeepslateBricks = 919,
    CrackedDeepslateTiles = 920,
    InfestedDeepslate = 921,
    SmoothBasalt = 922,
    RawIronBlock = 923,
    RawCopperBlock = 924,
    RawGoldBlock = 925,
    PottedAzaleaBush = 926,
    PottedFloweringAzaleaBush = 927,
    OchreFroglight = 928,
    VerdantFroglight = 929,
    PearlescentFroglight = 930,
    Frogspawn = 931,
    ReinforcedDeepslate = 932,
}

use std::convert::TryFrom;
impl TryFrom<u32> for Block {
    type Error = crate::Error;
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        match value {
            x if x == Self::Air as u32 => Ok(Self::Air),
            x if x == Self::Stone as u32 => Ok(Self::Stone),
            x if x == Self::Granite as u32 => Ok(Self::Granite),
            x if x == Self::PolishedGranite as u32 => Ok(Self::PolishedGranite),
            x if x == Self::Diorite as u32 => Ok(Self::Diorite),
            x if x == Self::PolishedDiorite as u32 => Ok(Self::PolishedDiorite),
            x if x == Self::Andesite as u32 => Ok(Self::Andesite),
            x if x == Self::PolishedAndesite as u32 => Ok(Self::PolishedAndesite),
            x if x == Self::GrassBlock as u32 => Ok(Self::GrassBlock),
            x if x == Self::Dirt as u32 => Ok(Self::Dirt),
            x if x == Self::CoarseDirt as u32 => Ok(Self::CoarseDirt),
            x if x == Self::Podzol as u32 => Ok(Self::Podzol),
            x if x == Self::Cobblestone as u32 => Ok(Self::Cobblestone),
            x if x == Self::OakPlanks as u32 => Ok(Self::OakPlanks),
            x if x == Self::SprucePlanks as u32 => Ok(Self::SprucePlanks),
            x if x == Self::BirchPlanks as u32 => Ok(Self::BirchPlanks),
            x if x == Self::JunglePlanks as u32 => Ok(Self::JunglePlanks),
            x if x == Self::AcaciaPlanks as u32 => Ok(Self::AcaciaPlanks),
            x if x == Self::DarkOakPlanks as u32 => Ok(Self::DarkOakPlanks),
            x if x == Self::MangrovePlanks as u32 => Ok(Self::MangrovePlanks),
            x if x == Self::OakSapling as u32 => Ok(Self::OakSapling),
            x if x == Self::SpruceSapling as u32 => Ok(Self::SpruceSapling),
            x if x == Self::BirchSapling as u32 => Ok(Self::BirchSapling),
            x if x == Self::JungleSapling as u32 => Ok(Self::JungleSapling),
            x if x == Self::AcaciaSapling as u32 => Ok(Self::AcaciaSapling),
            x if x == Self::DarkOakSapling as u32 => Ok(Self::DarkOakSapling),
            x if x == Self::MangrovePropagule as u32 => Ok(Self::MangrovePropagule),
            x if x == Self::Bedrock as u32 => Ok(Self::Bedrock),
            x if x == Self::Water as u32 => Ok(Self::Water),
            x if x == Self::Lava as u32 => Ok(Self::Lava),
            x if x == Self::Sand as u32 => Ok(Self::Sand),
            x if x == Self::RedSand as u32 => Ok(Self::RedSand),
            x if x == Self::Gravel as u32 => Ok(Self::Gravel),
            x if x == Self::GoldOre as u32 => Ok(Self::GoldOre),
            x if x == Self::DeepslateGoldOre as u32 => Ok(Self::DeepslateGoldOre),
            x if x == Self::IronOre as u32 => Ok(Self::IronOre),
            x if x == Self::DeepslateIronOre as u32 => Ok(Self::DeepslateIronOre),
            x if x == Self::CoalOre as u32 => Ok(Self::CoalOre),
            x if x == Self::DeepslateCoalOre as u32 => Ok(Self::DeepslateCoalOre),
            x if x == Self::NetherGoldOre as u32 => Ok(Self::NetherGoldOre),
            x if x == Self::OakLog as u32 => Ok(Self::OakLog),
            x if x == Self::SpruceLog as u32 => Ok(Self::SpruceLog),
            x if x == Self::BirchLog as u32 => Ok(Self::BirchLog),
            x if x == Self::JungleLog as u32 => Ok(Self::JungleLog),
            x if x == Self::AcaciaLog as u32 => Ok(Self::AcaciaLog),
            x if x == Self::DarkOakLog as u32 => Ok(Self::DarkOakLog),
            x if x == Self::MangroveLog as u32 => Ok(Self::MangroveLog),
            x if x == Self::MangroveRoots as u32 => Ok(Self::MangroveRoots),
            x if x == Self::MuddyMangroveRoots as u32 => Ok(Self::MuddyMangroveRoots),
            x if x == Self::StrippedSpruceLog as u32 => Ok(Self::StrippedSpruceLog),
            x if x == Self::StrippedBirchLog as u32 => Ok(Self::StrippedBirchLog),
            x if x == Self::StrippedJungleLog as u32 => Ok(Self::StrippedJungleLog),
            x if x == Self::StrippedAcaciaLog as u32 => Ok(Self::StrippedAcaciaLog),
            x if x == Self::StrippedDarkOakLog as u32 => Ok(Self::StrippedDarkOakLog),
            x if x == Self::StrippedOakLog as u32 => Ok(Self::StrippedOakLog),
            x if x == Self::StrippedMangroveLog as u32 => Ok(Self::StrippedMangroveLog),
            x if x == Self::OakWood as u32 => Ok(Self::OakWood),
            x if x == Self::SpruceWood as u32 => Ok(Self::SpruceWood),
            x if x == Self::BirchWood as u32 => Ok(Self::BirchWood),
            x if x == Self::JungleWood as u32 => Ok(Self::JungleWood),
            x if x == Self::AcaciaWood as u32 => Ok(Self::AcaciaWood),
            x if x == Self::DarkOakWood as u32 => Ok(Self::DarkOakWood),
            x if x == Self::MangroveWood as u32 => Ok(Self::MangroveWood),
            x if x == Self::StrippedOakWood as u32 => Ok(Self::StrippedOakWood),
            x if x == Self::StrippedSpruceWood as u32 => Ok(Self::StrippedSpruceWood),
            x if x == Self::StrippedBirchWood as u32 => Ok(Self::StrippedBirchWood),
            x if x == Self::StrippedJungleWood as u32 => Ok(Self::StrippedJungleWood),
            x if x == Self::StrippedAcaciaWood as u32 => Ok(Self::StrippedAcaciaWood),
            x if x == Self::StrippedDarkOakWood as u32 => Ok(Self::StrippedDarkOakWood),
            x if x == Self::StrippedMangroveWood as u32 => Ok(Self::StrippedMangroveWood),
            x if x == Self::OakLeaves as u32 => Ok(Self::OakLeaves),
            x if x == Self::SpruceLeaves as u32 => Ok(Self::SpruceLeaves),
            x if x == Self::BirchLeaves as u32 => Ok(Self::BirchLeaves),
            x if x == Self::JungleLeaves as u32 => Ok(Self::JungleLeaves),
            x if x == Self::AcaciaLeaves as u32 => Ok(Self::AcaciaLeaves),
            x if x == Self::DarkOakLeaves as u32 => Ok(Self::DarkOakLeaves),
            x if x == Self::MangroveLeaves as u32 => Ok(Self::MangroveLeaves),
            x if x == Self::AzaleaLeaves as u32 => Ok(Self::AzaleaLeaves),
            x if x == Self::FloweringAzaleaLeaves as u32 => Ok(Self::FloweringAzaleaLeaves),
            x if x == Self::Sponge as u32 => Ok(Self::Sponge),
            x if x == Self::WetSponge as u32 => Ok(Self::WetSponge),
            x if x == Self::Glass as u32 => Ok(Self::Glass),
            x if x == Self::LapisOre as u32 => Ok(Self::LapisOre),
            x if x == Self::DeepslateLapisOre as u32 => Ok(Self::DeepslateLapisOre),
            x if x == Self::LapisBlock as u32 => Ok(Self::LapisBlock),
            x if x == Self::Dispenser as u32 => Ok(Self::Dispenser),
            x if x == Self::Sandstone as u32 => Ok(Self::Sandstone),
            x if x == Self::ChiseledSandstone as u32 => Ok(Self::ChiseledSandstone),
            x if x == Self::CutSandstone as u32 => Ok(Self::CutSandstone),
            x if x == Self::NoteBlock as u32 => Ok(Self::NoteBlock),
            x if x == Self::WhiteBed as u32 => Ok(Self::WhiteBed),
            x if x == Self::OrangeBed as u32 => Ok(Self::OrangeBed),
            x if x == Self::MagentaBed as u32 => Ok(Self::MagentaBed),
            x if x == Self::LightBlueBed as u32 => Ok(Self::LightBlueBed),
            x if x == Self::YellowBed as u32 => Ok(Self::YellowBed),
            x if x == Self::LimeBed as u32 => Ok(Self::LimeBed),
            x if x == Self::PinkBed as u32 => Ok(Self::PinkBed),
            x if x == Self::GrayBed as u32 => Ok(Self::GrayBed),
            x if x == Self::LightGrayBed as u32 => Ok(Self::LightGrayBed),
            x if x == Self::CyanBed as u32 => Ok(Self::CyanBed),
            x if x == Self::PurpleBed as u32 => Ok(Self::PurpleBed),
            x if x == Self::BlueBed as u32 => Ok(Self::BlueBed),
            x if x == Self::BrownBed as u32 => Ok(Self::BrownBed),
            x if x == Self::GreenBed as u32 => Ok(Self::GreenBed),
            x if x == Self::RedBed as u32 => Ok(Self::RedBed),
            x if x == Self::BlackBed as u32 => Ok(Self::BlackBed),
            x if x == Self::PoweredRail as u32 => Ok(Self::PoweredRail),
            x if x == Self::DetectorRail as u32 => Ok(Self::DetectorRail),
            x if x == Self::StickyPiston as u32 => Ok(Self::StickyPiston),
            x if x == Self::Cobweb as u32 => Ok(Self::Cobweb),
            x if x == Self::Grass as u32 => Ok(Self::Grass),
            x if x == Self::Fern as u32 => Ok(Self::Fern),
            x if x == Self::DeadBush as u32 => Ok(Self::DeadBush),
            x if x == Self::Seagrass as u32 => Ok(Self::Seagrass),
            x if x == Self::TallSeagrass as u32 => Ok(Self::TallSeagrass),
            x if x == Self::Piston as u32 => Ok(Self::Piston),
            x if x == Self::PistonHead as u32 => Ok(Self::PistonHead),
            x if x == Self::WhiteWool as u32 => Ok(Self::WhiteWool),
            x if x == Self::OrangeWool as u32 => Ok(Self::OrangeWool),
            x if x == Self::MagentaWool as u32 => Ok(Self::MagentaWool),
            x if x == Self::LightBlueWool as u32 => Ok(Self::LightBlueWool),
            x if x == Self::YellowWool as u32 => Ok(Self::YellowWool),
            x if x == Self::LimeWool as u32 => Ok(Self::LimeWool),
            x if x == Self::PinkWool as u32 => Ok(Self::PinkWool),
            x if x == Self::GrayWool as u32 => Ok(Self::GrayWool),
            x if x == Self::LightGrayWool as u32 => Ok(Self::LightGrayWool),
            x if x == Self::CyanWool as u32 => Ok(Self::CyanWool),
            x if x == Self::PurpleWool as u32 => Ok(Self::PurpleWool),
            x if x == Self::BlueWool as u32 => Ok(Self::BlueWool),
            x if x == Self::BrownWool as u32 => Ok(Self::BrownWool),
            x if x == Self::GreenWool as u32 => Ok(Self::GreenWool),
            x if x == Self::RedWool as u32 => Ok(Self::RedWool),
            x if x == Self::BlackWool as u32 => Ok(Self::BlackWool),
            x if x == Self::MovingPiston as u32 => Ok(Self::MovingPiston),
            x if x == Self::Dandelion as u32 => Ok(Self::Dandelion),
            x if x == Self::Poppy as u32 => Ok(Self::Poppy),
            x if x == Self::BlueOrchid as u32 => Ok(Self::BlueOrchid),
            x if x == Self::Allium as u32 => Ok(Self::Allium),
            x if x == Self::AzureBluet as u32 => Ok(Self::AzureBluet),
            x if x == Self::RedTulip as u32 => Ok(Self::RedTulip),
            x if x == Self::OrangeTulip as u32 => Ok(Self::OrangeTulip),
            x if x == Self::WhiteTulip as u32 => Ok(Self::WhiteTulip),
            x if x == Self::PinkTulip as u32 => Ok(Self::PinkTulip),
            x if x == Self::OxeyeDaisy as u32 => Ok(Self::OxeyeDaisy),
            x if x == Self::Cornflower as u32 => Ok(Self::Cornflower),
            x if x == Self::WitherRose as u32 => Ok(Self::WitherRose),
            x if x == Self::LilyOfTheValley as u32 => Ok(Self::LilyOfTheValley),
            x if x == Self::BrownMushroom as u32 => Ok(Self::BrownMushroom),
            x if x == Self::RedMushroom as u32 => Ok(Self::RedMushroom),
            x if x == Self::GoldBlock as u32 => Ok(Self::GoldBlock),
            x if x == Self::IronBlock as u32 => Ok(Self::IronBlock),
            x if x == Self::Bricks as u32 => Ok(Self::Bricks),
            x if x == Self::Tnt as u32 => Ok(Self::Tnt),
            x if x == Self::Bookshelf as u32 => Ok(Self::Bookshelf),
            x if x == Self::MossyCobblestone as u32 => Ok(Self::MossyCobblestone),
            x if x == Self::Obsidian as u32 => Ok(Self::Obsidian),
            x if x == Self::Torch as u32 => Ok(Self::Torch),
            x if x == Self::WallTorch as u32 => Ok(Self::WallTorch),
            x if x == Self::Fire as u32 => Ok(Self::Fire),
            x if x == Self::SoulFire as u32 => Ok(Self::SoulFire),
            x if x == Self::Spawner as u32 => Ok(Self::Spawner),
            x if x == Self::OakStairs as u32 => Ok(Self::OakStairs),
            x if x == Self::Chest as u32 => Ok(Self::Chest),
            x if x == Self::RedstoneWire as u32 => Ok(Self::RedstoneWire),
            x if x == Self::DiamondOre as u32 => Ok(Self::DiamondOre),
            x if x == Self::DeepslateDiamondOre as u32 => Ok(Self::DeepslateDiamondOre),
            x if x == Self::DiamondBlock as u32 => Ok(Self::DiamondBlock),
            x if x == Self::CraftingTable as u32 => Ok(Self::CraftingTable),
            x if x == Self::Wheat as u32 => Ok(Self::Wheat),
            x if x == Self::Farmland as u32 => Ok(Self::Farmland),
            x if x == Self::Furnace as u32 => Ok(Self::Furnace),
            x if x == Self::OakSign as u32 => Ok(Self::OakSign),
            x if x == Self::SpruceSign as u32 => Ok(Self::SpruceSign),
            x if x == Self::BirchSign as u32 => Ok(Self::BirchSign),
            x if x == Self::AcaciaSign as u32 => Ok(Self::AcaciaSign),
            x if x == Self::JungleSign as u32 => Ok(Self::JungleSign),
            x if x == Self::DarkOakSign as u32 => Ok(Self::DarkOakSign),
            x if x == Self::MangroveSign as u32 => Ok(Self::MangroveSign),
            x if x == Self::OakDoor as u32 => Ok(Self::OakDoor),
            x if x == Self::Ladder as u32 => Ok(Self::Ladder),
            x if x == Self::Rail as u32 => Ok(Self::Rail),
            x if x == Self::CobblestoneStairs as u32 => Ok(Self::CobblestoneStairs),
            x if x == Self::OakWallSign as u32 => Ok(Self::OakWallSign),
            x if x == Self::SpruceWallSign as u32 => Ok(Self::SpruceWallSign),
            x if x == Self::BirchWallSign as u32 => Ok(Self::BirchWallSign),
            x if x == Self::AcaciaWallSign as u32 => Ok(Self::AcaciaWallSign),
            x if x == Self::JungleWallSign as u32 => Ok(Self::JungleWallSign),
            x if x == Self::DarkOakWallSign as u32 => Ok(Self::DarkOakWallSign),
            x if x == Self::MangroveWallSign as u32 => Ok(Self::MangroveWallSign),
            x if x == Self::Lever as u32 => Ok(Self::Lever),
            x if x == Self::StonePressurePlate as u32 => Ok(Self::StonePressurePlate),
            x if x == Self::IronDoor as u32 => Ok(Self::IronDoor),
            x if x == Self::OakPressurePlate as u32 => Ok(Self::OakPressurePlate),
            x if x == Self::SprucePressurePlate as u32 => Ok(Self::SprucePressurePlate),
            x if x == Self::BirchPressurePlate as u32 => Ok(Self::BirchPressurePlate),
            x if x == Self::JunglePressurePlate as u32 => Ok(Self::JunglePressurePlate),
            x if x == Self::AcaciaPressurePlate as u32 => Ok(Self::AcaciaPressurePlate),
            x if x == Self::DarkOakPressurePlate as u32 => Ok(Self::DarkOakPressurePlate),
            x if x == Self::MangrovePressurePlate as u32 => Ok(Self::MangrovePressurePlate),
            x if x == Self::RedstoneOre as u32 => Ok(Self::RedstoneOre),
            x if x == Self::DeepslateRedstoneOre as u32 => Ok(Self::DeepslateRedstoneOre),
            x if x == Self::RedstoneTorch as u32 => Ok(Self::RedstoneTorch),
            x if x == Self::RedstoneWallTorch as u32 => Ok(Self::RedstoneWallTorch),
            x if x == Self::StoneButton as u32 => Ok(Self::StoneButton),
            x if x == Self::Snow as u32 => Ok(Self::Snow),
            x if x == Self::Ice as u32 => Ok(Self::Ice),
            x if x == Self::SnowBlock as u32 => Ok(Self::SnowBlock),
            x if x == Self::Cactus as u32 => Ok(Self::Cactus),
            x if x == Self::Clay as u32 => Ok(Self::Clay),
            x if x == Self::SugarCane as u32 => Ok(Self::SugarCane),
            x if x == Self::Jukebox as u32 => Ok(Self::Jukebox),
            x if x == Self::OakFence as u32 => Ok(Self::OakFence),
            x if x == Self::Pumpkin as u32 => Ok(Self::Pumpkin),
            x if x == Self::Netherrack as u32 => Ok(Self::Netherrack),
            x if x == Self::SoulSand as u32 => Ok(Self::SoulSand),
            x if x == Self::SoulSoil as u32 => Ok(Self::SoulSoil),
            x if x == Self::Basalt as u32 => Ok(Self::Basalt),
            x if x == Self::PolishedBasalt as u32 => Ok(Self::PolishedBasalt),
            x if x == Self::SoulTorch as u32 => Ok(Self::SoulTorch),
            x if x == Self::SoulWallTorch as u32 => Ok(Self::SoulWallTorch),
            x if x == Self::Glowstone as u32 => Ok(Self::Glowstone),
            x if x == Self::NetherPortal as u32 => Ok(Self::NetherPortal),
            x if x == Self::CarvedPumpkin as u32 => Ok(Self::CarvedPumpkin),
            x if x == Self::JackOLantern as u32 => Ok(Self::JackOLantern),
            x if x == Self::Cake as u32 => Ok(Self::Cake),
            x if x == Self::Repeater as u32 => Ok(Self::Repeater),
            x if x == Self::WhiteStainedGlass as u32 => Ok(Self::WhiteStainedGlass),
            x if x == Self::OrangeStainedGlass as u32 => Ok(Self::OrangeStainedGlass),
            x if x == Self::MagentaStainedGlass as u32 => Ok(Self::MagentaStainedGlass),
            x if x == Self::LightBlueStainedGlass as u32 => Ok(Self::LightBlueStainedGlass),
            x if x == Self::YellowStainedGlass as u32 => Ok(Self::YellowStainedGlass),
            x if x == Self::LimeStainedGlass as u32 => Ok(Self::LimeStainedGlass),
            x if x == Self::PinkStainedGlass as u32 => Ok(Self::PinkStainedGlass),
            x if x == Self::GrayStainedGlass as u32 => Ok(Self::GrayStainedGlass),
            x if x == Self::LightGrayStainedGlass as u32 => Ok(Self::LightGrayStainedGlass),
            x if x == Self::CyanStainedGlass as u32 => Ok(Self::CyanStainedGlass),
            x if x == Self::PurpleStainedGlass as u32 => Ok(Self::PurpleStainedGlass),
            x if x == Self::BlueStainedGlass as u32 => Ok(Self::BlueStainedGlass),
            x if x == Self::BrownStainedGlass as u32 => Ok(Self::BrownStainedGlass),
            x if x == Self::GreenStainedGlass as u32 => Ok(Self::GreenStainedGlass),
            x if x == Self::RedStainedGlass as u32 => Ok(Self::RedStainedGlass),
            x if x == Self::BlackStainedGlass as u32 => Ok(Self::BlackStainedGlass),
            x if x == Self::OakTrapdoor as u32 => Ok(Self::OakTrapdoor),
            x if x == Self::SpruceTrapdoor as u32 => Ok(Self::SpruceTrapdoor),
            x if x == Self::BirchTrapdoor as u32 => Ok(Self::BirchTrapdoor),
            x if x == Self::JungleTrapdoor as u32 => Ok(Self::JungleTrapdoor),
            x if x == Self::AcaciaTrapdoor as u32 => Ok(Self::AcaciaTrapdoor),
            x if x == Self::DarkOakTrapdoor as u32 => Ok(Self::DarkOakTrapdoor),
            x if x == Self::MangroveTrapdoor as u32 => Ok(Self::MangroveTrapdoor),
            x if x == Self::StoneBricks as u32 => Ok(Self::StoneBricks),
            x if x == Self::MossyStoneBricks as u32 => Ok(Self::MossyStoneBricks),
            x if x == Self::CrackedStoneBricks as u32 => Ok(Self::CrackedStoneBricks),
            x if x == Self::ChiseledStoneBricks as u32 => Ok(Self::ChiseledStoneBricks),
            x if x == Self::PackedMud as u32 => Ok(Self::PackedMud),
            x if x == Self::MudBricks as u32 => Ok(Self::MudBricks),
            x if x == Self::InfestedStone as u32 => Ok(Self::InfestedStone),
            x if x == Self::InfestedCobblestone as u32 => Ok(Self::InfestedCobblestone),
            x if x == Self::InfestedStoneBricks as u32 => Ok(Self::InfestedStoneBricks),
            x if x == Self::InfestedMossyStoneBricks as u32 => Ok(Self::InfestedMossyStoneBricks),
            x if x == Self::InfestedCrackedStoneBricks as u32 => Ok(Self::InfestedCrackedStoneBricks),
            x if x == Self::InfestedChiseledStoneBricks as u32 => Ok(Self::InfestedChiseledStoneBricks),
            x if x == Self::BrownMushroomBlock as u32 => Ok(Self::BrownMushroomBlock),
            x if x == Self::RedMushroomBlock as u32 => Ok(Self::RedMushroomBlock),
            x if x == Self::MushroomStem as u32 => Ok(Self::MushroomStem),
            x if x == Self::IronBars as u32 => Ok(Self::IronBars),
            x if x == Self::Chain as u32 => Ok(Self::Chain),
            x if x == Self::GlassPane as u32 => Ok(Self::GlassPane),
            x if x == Self::Melon as u32 => Ok(Self::Melon),
            x if x == Self::AttachedPumpkinStem as u32 => Ok(Self::AttachedPumpkinStem),
            x if x == Self::AttachedMelonStem as u32 => Ok(Self::AttachedMelonStem),
            x if x == Self::PumpkinStem as u32 => Ok(Self::PumpkinStem),
            x if x == Self::MelonStem as u32 => Ok(Self::MelonStem),
            x if x == Self::Vine as u32 => Ok(Self::Vine),
            x if x == Self::GlowLichen as u32 => Ok(Self::GlowLichen),
            x if x == Self::OakFenceGate as u32 => Ok(Self::OakFenceGate),
            x if x == Self::BrickStairs as u32 => Ok(Self::BrickStairs),
            x if x == Self::StoneBrickStairs as u32 => Ok(Self::StoneBrickStairs),
            x if x == Self::MudBrickStairs as u32 => Ok(Self::MudBrickStairs),
            x if x == Self::Mycelium as u32 => Ok(Self::Mycelium),
            x if x == Self::LilyPad as u32 => Ok(Self::LilyPad),
            x if x == Self::NetherBricks as u32 => Ok(Self::NetherBricks),
            x if x == Self::NetherBrickFence as u32 => Ok(Self::NetherBrickFence),
            x if x == Self::NetherBrickStairs as u32 => Ok(Self::NetherBrickStairs),
            x if x == Self::NetherWart as u32 => Ok(Self::NetherWart),
            x if x == Self::EnchantingTable as u32 => Ok(Self::EnchantingTable),
            x if x == Self::BrewingStand as u32 => Ok(Self::BrewingStand),
            x if x == Self::Cauldron as u32 => Ok(Self::Cauldron),
            x if x == Self::WaterCauldron as u32 => Ok(Self::WaterCauldron),
            x if x == Self::LavaCauldron as u32 => Ok(Self::LavaCauldron),
            x if x == Self::PowderSnowCauldron as u32 => Ok(Self::PowderSnowCauldron),
            x if x == Self::EndPortal as u32 => Ok(Self::EndPortal),
            x if x == Self::EndPortalFrame as u32 => Ok(Self::EndPortalFrame),
            x if x == Self::EndStone as u32 => Ok(Self::EndStone),
            x if x == Self::DragonEgg as u32 => Ok(Self::DragonEgg),
            x if x == Self::RedstoneLamp as u32 => Ok(Self::RedstoneLamp),
            x if x == Self::Cocoa as u32 => Ok(Self::Cocoa),
            x if x == Self::SandstoneStairs as u32 => Ok(Self::SandstoneStairs),
            x if x == Self::EmeraldOre as u32 => Ok(Self::EmeraldOre),
            x if x == Self::DeepslateEmeraldOre as u32 => Ok(Self::DeepslateEmeraldOre),
            x if x == Self::EnderChest as u32 => Ok(Self::EnderChest),
            x if x == Self::TripwireHook as u32 => Ok(Self::TripwireHook),
            x if x == Self::Tripwire as u32 => Ok(Self::Tripwire),
            x if x == Self::EmeraldBlock as u32 => Ok(Self::EmeraldBlock),
            x if x == Self::SpruceStairs as u32 => Ok(Self::SpruceStairs),
            x if x == Self::BirchStairs as u32 => Ok(Self::BirchStairs),
            x if x == Self::JungleStairs as u32 => Ok(Self::JungleStairs),
            x if x == Self::CommandBlock as u32 => Ok(Self::CommandBlock),
            x if x == Self::Beacon as u32 => Ok(Self::Beacon),
            x if x == Self::CobblestoneWall as u32 => Ok(Self::CobblestoneWall),
            x if x == Self::MossyCobblestoneWall as u32 => Ok(Self::MossyCobblestoneWall),
            x if x == Self::FlowerPot as u32 => Ok(Self::FlowerPot),
            x if x == Self::PottedOakSapling as u32 => Ok(Self::PottedOakSapling),
            x if x == Self::PottedSpruceSapling as u32 => Ok(Self::PottedSpruceSapling),
            x if x == Self::PottedBirchSapling as u32 => Ok(Self::PottedBirchSapling),
            x if x == Self::PottedJungleSapling as u32 => Ok(Self::PottedJungleSapling),
            x if x == Self::PottedAcaciaSapling as u32 => Ok(Self::PottedAcaciaSapling),
            x if x == Self::PottedDarkOakSapling as u32 => Ok(Self::PottedDarkOakSapling),
            x if x == Self::PottedMangrovePropagule as u32 => Ok(Self::PottedMangrovePropagule),
            x if x == Self::PottedFern as u32 => Ok(Self::PottedFern),
            x if x == Self::PottedDandelion as u32 => Ok(Self::PottedDandelion),
            x if x == Self::PottedPoppy as u32 => Ok(Self::PottedPoppy),
            x if x == Self::PottedBlueOrchid as u32 => Ok(Self::PottedBlueOrchid),
            x if x == Self::PottedAllium as u32 => Ok(Self::PottedAllium),
            x if x == Self::PottedAzureBluet as u32 => Ok(Self::PottedAzureBluet),
            x if x == Self::PottedRedTulip as u32 => Ok(Self::PottedRedTulip),
            x if x == Self::PottedOrangeTulip as u32 => Ok(Self::PottedOrangeTulip),
            x if x == Self::PottedWhiteTulip as u32 => Ok(Self::PottedWhiteTulip),
            x if x == Self::PottedPinkTulip as u32 => Ok(Self::PottedPinkTulip),
            x if x == Self::PottedOxeyeDaisy as u32 => Ok(Self::PottedOxeyeDaisy),
            x if x == Self::PottedCornflower as u32 => Ok(Self::PottedCornflower),
            x if x == Self::PottedLilyOfTheValley as u32 => Ok(Self::PottedLilyOfTheValley),
            x if x == Self::PottedWitherRose as u32 => Ok(Self::PottedWitherRose),
            x if x == Self::PottedRedMushroom as u32 => Ok(Self::PottedRedMushroom),
            x if x == Self::PottedBrownMushroom as u32 => Ok(Self::PottedBrownMushroom),
            x if x == Self::PottedDeadBush as u32 => Ok(Self::PottedDeadBush),
            x if x == Self::PottedCactus as u32 => Ok(Self::PottedCactus),
            x if x == Self::Carrots as u32 => Ok(Self::Carrots),
            x if x == Self::Potatoes as u32 => Ok(Self::Potatoes),
            x if x == Self::OakButton as u32 => Ok(Self::OakButton),
            x if x == Self::SpruceButton as u32 => Ok(Self::SpruceButton),
            x if x == Self::BirchButton as u32 => Ok(Self::BirchButton),
            x if x == Self::JungleButton as u32 => Ok(Self::JungleButton),
            x if x == Self::AcaciaButton as u32 => Ok(Self::AcaciaButton),
            x if x == Self::DarkOakButton as u32 => Ok(Self::DarkOakButton),
            x if x == Self::MangroveButton as u32 => Ok(Self::MangroveButton),
            x if x == Self::SkeletonSkull as u32 => Ok(Self::SkeletonSkull),
            x if x == Self::SkeletonWallSkull as u32 => Ok(Self::SkeletonWallSkull),
            x if x == Self::WitherSkeletonSkull as u32 => Ok(Self::WitherSkeletonSkull),
            x if x == Self::WitherSkeletonWallSkull as u32 => Ok(Self::WitherSkeletonWallSkull),
            x if x == Self::ZombieHead as u32 => Ok(Self::ZombieHead),
            x if x == Self::ZombieWallHead as u32 => Ok(Self::ZombieWallHead),
            x if x == Self::PlayerHead as u32 => Ok(Self::PlayerHead),
            x if x == Self::PlayerWallHead as u32 => Ok(Self::PlayerWallHead),
            x if x == Self::CreeperHead as u32 => Ok(Self::CreeperHead),
            x if x == Self::CreeperWallHead as u32 => Ok(Self::CreeperWallHead),
            x if x == Self::DragonHead as u32 => Ok(Self::DragonHead),
            x if x == Self::DragonWallHead as u32 => Ok(Self::DragonWallHead),
            x if x == Self::Anvil as u32 => Ok(Self::Anvil),
            x if x == Self::ChippedAnvil as u32 => Ok(Self::ChippedAnvil),
            x if x == Self::DamagedAnvil as u32 => Ok(Self::DamagedAnvil),
            x if x == Self::TrappedChest as u32 => Ok(Self::TrappedChest),
            x if x == Self::LightWeightedPressurePlate as u32 => Ok(Self::LightWeightedPressurePlate),
            x if x == Self::HeavyWeightedPressurePlate as u32 => Ok(Self::HeavyWeightedPressurePlate),
            x if x == Self::Comparator as u32 => Ok(Self::Comparator),
            x if x == Self::DaylightDetector as u32 => Ok(Self::DaylightDetector),
            x if x == Self::RedstoneBlock as u32 => Ok(Self::RedstoneBlock),
            x if x == Self::NetherQuartzOre as u32 => Ok(Self::NetherQuartzOre),
            x if x == Self::Hopper as u32 => Ok(Self::Hopper),
            x if x == Self::QuartzBlock as u32 => Ok(Self::QuartzBlock),
            x if x == Self::ChiseledQuartzBlock as u32 => Ok(Self::ChiseledQuartzBlock),
            x if x == Self::QuartzPillar as u32 => Ok(Self::QuartzPillar),
            x if x == Self::QuartzStairs as u32 => Ok(Self::QuartzStairs),
            x if x == Self::ActivatorRail as u32 => Ok(Self::ActivatorRail),
            x if x == Self::Dropper as u32 => Ok(Self::Dropper),
            x if x == Self::WhiteTerracotta as u32 => Ok(Self::WhiteTerracotta),
            x if x == Self::OrangeTerracotta as u32 => Ok(Self::OrangeTerracotta),
            x if x == Self::MagentaTerracotta as u32 => Ok(Self::MagentaTerracotta),
            x if x == Self::LightBlueTerracotta as u32 => Ok(Self::LightBlueTerracotta),
            x if x == Self::YellowTerracotta as u32 => Ok(Self::YellowTerracotta),
            x if x == Self::LimeTerracotta as u32 => Ok(Self::LimeTerracotta),
            x if x == Self::PinkTerracotta as u32 => Ok(Self::PinkTerracotta),
            x if x == Self::GrayTerracotta as u32 => Ok(Self::GrayTerracotta),
            x if x == Self::LightGrayTerracotta as u32 => Ok(Self::LightGrayTerracotta),
            x if x == Self::CyanTerracotta as u32 => Ok(Self::CyanTerracotta),
            x if x == Self::PurpleTerracotta as u32 => Ok(Self::PurpleTerracotta),
            x if x == Self::BlueTerracotta as u32 => Ok(Self::BlueTerracotta),
            x if x == Self::BrownTerracotta as u32 => Ok(Self::BrownTerracotta),
            x if x == Self::GreenTerracotta as u32 => Ok(Self::GreenTerracotta),
            x if x == Self::RedTerracotta as u32 => Ok(Self::RedTerracotta),
            x if x == Self::BlackTerracotta as u32 => Ok(Self::BlackTerracotta),
            x if x == Self::WhiteStainedGlassPane as u32 => Ok(Self::WhiteStainedGlassPane),
            x if x == Self::OrangeStainedGlassPane as u32 => Ok(Self::OrangeStainedGlassPane),
            x if x == Self::MagentaStainedGlassPane as u32 => Ok(Self::MagentaStainedGlassPane),
            x if x == Self::LightBlueStainedGlassPane as u32 => Ok(Self::LightBlueStainedGlassPane),
            x if x == Self::YellowStainedGlassPane as u32 => Ok(Self::YellowStainedGlassPane),
            x if x == Self::LimeStainedGlassPane as u32 => Ok(Self::LimeStainedGlassPane),
            x if x == Self::PinkStainedGlassPane as u32 => Ok(Self::PinkStainedGlassPane),
            x if x == Self::GrayStainedGlassPane as u32 => Ok(Self::GrayStainedGlassPane),
            x if x == Self::LightGrayStainedGlassPane as u32 => Ok(Self::LightGrayStainedGlassPane),
            x if x == Self::CyanStainedGlassPane as u32 => Ok(Self::CyanStainedGlassPane),
            x if x == Self::PurpleStainedGlassPane as u32 => Ok(Self::PurpleStainedGlassPane),
            x if x == Self::BlueStainedGlassPane as u32 => Ok(Self::BlueStainedGlassPane),
            x if x == Self::BrownStainedGlassPane as u32 => Ok(Self::BrownStainedGlassPane),
            x if x == Self::GreenStainedGlassPane as u32 => Ok(Self::GreenStainedGlassPane),
            x if x == Self::RedStainedGlassPane as u32 => Ok(Self::RedStainedGlassPane),
            x if x == Self::BlackStainedGlassPane as u32 => Ok(Self::BlackStainedGlassPane),
            x if x == Self::AcaciaStairs as u32 => Ok(Self::AcaciaStairs),
            x if x == Self::DarkOakStairs as u32 => Ok(Self::DarkOakStairs),
            x if x == Self::MangroveStairs as u32 => Ok(Self::MangroveStairs),
            x if x == Self::SlimeBlock as u32 => Ok(Self::SlimeBlock),
            x if x == Self::Barrier as u32 => Ok(Self::Barrier),
            x if x == Self::Light as u32 => Ok(Self::Light),
            x if x == Self::IronTrapdoor as u32 => Ok(Self::IronTrapdoor),
            x if x == Self::Prismarine as u32 => Ok(Self::Prismarine),
            x if x == Self::PrismarineBricks as u32 => Ok(Self::PrismarineBricks),
            x if x == Self::DarkPrismarine as u32 => Ok(Self::DarkPrismarine),
            x if x == Self::PrismarineStairs as u32 => Ok(Self::PrismarineStairs),
            x if x == Self::PrismarineBrickStairs as u32 => Ok(Self::PrismarineBrickStairs),
            x if x == Self::DarkPrismarineStairs as u32 => Ok(Self::DarkPrismarineStairs),
            x if x == Self::PrismarineSlab as u32 => Ok(Self::PrismarineSlab),
            x if x == Self::PrismarineBrickSlab as u32 => Ok(Self::PrismarineBrickSlab),
            x if x == Self::DarkPrismarineSlab as u32 => Ok(Self::DarkPrismarineSlab),
            x if x == Self::SeaLantern as u32 => Ok(Self::SeaLantern),
            x if x == Self::HayBlock as u32 => Ok(Self::HayBlock),
            x if x == Self::WhiteCarpet as u32 => Ok(Self::WhiteCarpet),
            x if x == Self::OrangeCarpet as u32 => Ok(Self::OrangeCarpet),
            x if x == Self::MagentaCarpet as u32 => Ok(Self::MagentaCarpet),
            x if x == Self::LightBlueCarpet as u32 => Ok(Self::LightBlueCarpet),
            x if x == Self::YellowCarpet as u32 => Ok(Self::YellowCarpet),
            x if x == Self::LimeCarpet as u32 => Ok(Self::LimeCarpet),
            x if x == Self::PinkCarpet as u32 => Ok(Self::PinkCarpet),
            x if x == Self::GrayCarpet as u32 => Ok(Self::GrayCarpet),
            x if x == Self::LightGrayCarpet as u32 => Ok(Self::LightGrayCarpet),
            x if x == Self::CyanCarpet as u32 => Ok(Self::CyanCarpet),
            x if x == Self::PurpleCarpet as u32 => Ok(Self::PurpleCarpet),
            x if x == Self::BlueCarpet as u32 => Ok(Self::BlueCarpet),
            x if x == Self::BrownCarpet as u32 => Ok(Self::BrownCarpet),
            x if x == Self::GreenCarpet as u32 => Ok(Self::GreenCarpet),
            x if x == Self::RedCarpet as u32 => Ok(Self::RedCarpet),
            x if x == Self::BlackCarpet as u32 => Ok(Self::BlackCarpet),
            x if x == Self::Terracotta as u32 => Ok(Self::Terracotta),
            x if x == Self::CoalBlock as u32 => Ok(Self::CoalBlock),
            x if x == Self::PackedIce as u32 => Ok(Self::PackedIce),
            x if x == Self::Sunflower as u32 => Ok(Self::Sunflower),
            x if x == Self::Lilac as u32 => Ok(Self::Lilac),
            x if x == Self::RoseBush as u32 => Ok(Self::RoseBush),
            x if x == Self::Peony as u32 => Ok(Self::Peony),
            x if x == Self::TallGrass as u32 => Ok(Self::TallGrass),
            x if x == Self::LargeFern as u32 => Ok(Self::LargeFern),
            x if x == Self::WhiteBanner as u32 => Ok(Self::WhiteBanner),
            x if x == Self::OrangeBanner as u32 => Ok(Self::OrangeBanner),
            x if x == Self::MagentaBanner as u32 => Ok(Self::MagentaBanner),
            x if x == Self::LightBlueBanner as u32 => Ok(Self::LightBlueBanner),
            x if x == Self::YellowBanner as u32 => Ok(Self::YellowBanner),
            x if x == Self::LimeBanner as u32 => Ok(Self::LimeBanner),
            x if x == Self::PinkBanner as u32 => Ok(Self::PinkBanner),
            x if x == Self::GrayBanner as u32 => Ok(Self::GrayBanner),
            x if x == Self::LightGrayBanner as u32 => Ok(Self::LightGrayBanner),
            x if x == Self::CyanBanner as u32 => Ok(Self::CyanBanner),
            x if x == Self::PurpleBanner as u32 => Ok(Self::PurpleBanner),
            x if x == Self::BlueBanner as u32 => Ok(Self::BlueBanner),
            x if x == Self::BrownBanner as u32 => Ok(Self::BrownBanner),
            x if x == Self::GreenBanner as u32 => Ok(Self::GreenBanner),
            x if x == Self::RedBanner as u32 => Ok(Self::RedBanner),
            x if x == Self::BlackBanner as u32 => Ok(Self::BlackBanner),
            x if x == Self::WhiteWallBanner as u32 => Ok(Self::WhiteWallBanner),
            x if x == Self::OrangeWallBanner as u32 => Ok(Self::OrangeWallBanner),
            x if x == Self::MagentaWallBanner as u32 => Ok(Self::MagentaWallBanner),
            x if x == Self::LightBlueWallBanner as u32 => Ok(Self::LightBlueWallBanner),
            x if x == Self::YellowWallBanner as u32 => Ok(Self::YellowWallBanner),
            x if x == Self::LimeWallBanner as u32 => Ok(Self::LimeWallBanner),
            x if x == Self::PinkWallBanner as u32 => Ok(Self::PinkWallBanner),
            x if x == Self::GrayWallBanner as u32 => Ok(Self::GrayWallBanner),
            x if x == Self::LightGrayWallBanner as u32 => Ok(Self::LightGrayWallBanner),
            x if x == Self::CyanWallBanner as u32 => Ok(Self::CyanWallBanner),
            x if x == Self::PurpleWallBanner as u32 => Ok(Self::PurpleWallBanner),
            x if x == Self::BlueWallBanner as u32 => Ok(Self::BlueWallBanner),
            x if x == Self::BrownWallBanner as u32 => Ok(Self::BrownWallBanner),
            x if x == Self::GreenWallBanner as u32 => Ok(Self::GreenWallBanner),
            x if x == Self::RedWallBanner as u32 => Ok(Self::RedWallBanner),
            x if x == Self::BlackWallBanner as u32 => Ok(Self::BlackWallBanner),
            x if x == Self::RedSandstone as u32 => Ok(Self::RedSandstone),
            x if x == Self::ChiseledRedSandstone as u32 => Ok(Self::ChiseledRedSandstone),
            x if x == Self::CutRedSandstone as u32 => Ok(Self::CutRedSandstone),
            x if x == Self::RedSandstoneStairs as u32 => Ok(Self::RedSandstoneStairs),
            x if x == Self::OakSlab as u32 => Ok(Self::OakSlab),
            x if x == Self::SpruceSlab as u32 => Ok(Self::SpruceSlab),
            x if x == Self::BirchSlab as u32 => Ok(Self::BirchSlab),
            x if x == Self::JungleSlab as u32 => Ok(Self::JungleSlab),
            x if x == Self::AcaciaSlab as u32 => Ok(Self::AcaciaSlab),
            x if x == Self::DarkOakSlab as u32 => Ok(Self::DarkOakSlab),
            x if x == Self::MangroveSlab as u32 => Ok(Self::MangroveSlab),
            x if x == Self::StoneSlab as u32 => Ok(Self::StoneSlab),
            x if x == Self::SmoothStoneSlab as u32 => Ok(Self::SmoothStoneSlab),
            x if x == Self::SandstoneSlab as u32 => Ok(Self::SandstoneSlab),
            x if x == Self::CutSandstoneSlab as u32 => Ok(Self::CutSandstoneSlab),
            x if x == Self::PetrifiedOakSlab as u32 => Ok(Self::PetrifiedOakSlab),
            x if x == Self::CobblestoneSlab as u32 => Ok(Self::CobblestoneSlab),
            x if x == Self::BrickSlab as u32 => Ok(Self::BrickSlab),
            x if x == Self::StoneBrickSlab as u32 => Ok(Self::StoneBrickSlab),
            x if x == Self::MudBrickSlab as u32 => Ok(Self::MudBrickSlab),
            x if x == Self::NetherBrickSlab as u32 => Ok(Self::NetherBrickSlab),
            x if x == Self::QuartzSlab as u32 => Ok(Self::QuartzSlab),
            x if x == Self::RedSandstoneSlab as u32 => Ok(Self::RedSandstoneSlab),
            x if x == Self::CutRedSandstoneSlab as u32 => Ok(Self::CutRedSandstoneSlab),
            x if x == Self::PurpurSlab as u32 => Ok(Self::PurpurSlab),
            x if x == Self::SmoothStone as u32 => Ok(Self::SmoothStone),
            x if x == Self::SmoothSandstone as u32 => Ok(Self::SmoothSandstone),
            x if x == Self::SmoothQuartz as u32 => Ok(Self::SmoothQuartz),
            x if x == Self::SmoothRedSandstone as u32 => Ok(Self::SmoothRedSandstone),
            x if x == Self::SpruceFenceGate as u32 => Ok(Self::SpruceFenceGate),
            x if x == Self::BirchFenceGate as u32 => Ok(Self::BirchFenceGate),
            x if x == Self::JungleFenceGate as u32 => Ok(Self::JungleFenceGate),
            x if x == Self::AcaciaFenceGate as u32 => Ok(Self::AcaciaFenceGate),
            x if x == Self::DarkOakFenceGate as u32 => Ok(Self::DarkOakFenceGate),
            x if x == Self::MangroveFenceGate as u32 => Ok(Self::MangroveFenceGate),
            x if x == Self::SpruceFence as u32 => Ok(Self::SpruceFence),
            x if x == Self::BirchFence as u32 => Ok(Self::BirchFence),
            x if x == Self::JungleFence as u32 => Ok(Self::JungleFence),
            x if x == Self::AcaciaFence as u32 => Ok(Self::AcaciaFence),
            x if x == Self::DarkOakFence as u32 => Ok(Self::DarkOakFence),
            x if x == Self::MangroveFence as u32 => Ok(Self::MangroveFence),
            x if x == Self::SpruceDoor as u32 => Ok(Self::SpruceDoor),
            x if x == Self::BirchDoor as u32 => Ok(Self::BirchDoor),
            x if x == Self::JungleDoor as u32 => Ok(Self::JungleDoor),
            x if x == Self::AcaciaDoor as u32 => Ok(Self::AcaciaDoor),
            x if x == Self::DarkOakDoor as u32 => Ok(Self::DarkOakDoor),
            x if x == Self::MangroveDoor as u32 => Ok(Self::MangroveDoor),
            x if x == Self::EndRod as u32 => Ok(Self::EndRod),
            x if x == Self::ChorusPlant as u32 => Ok(Self::ChorusPlant),
            x if x == Self::ChorusFlower as u32 => Ok(Self::ChorusFlower),
            x if x == Self::PurpurBlock as u32 => Ok(Self::PurpurBlock),
            x if x == Self::PurpurPillar as u32 => Ok(Self::PurpurPillar),
            x if x == Self::PurpurStairs as u32 => Ok(Self::PurpurStairs),
            x if x == Self::EndStoneBricks as u32 => Ok(Self::EndStoneBricks),
            x if x == Self::Beetroots as u32 => Ok(Self::Beetroots),
            x if x == Self::DirtPath as u32 => Ok(Self::DirtPath),
            x if x == Self::EndGateway as u32 => Ok(Self::EndGateway),
            x if x == Self::RepeatingCommandBlock as u32 => Ok(Self::RepeatingCommandBlock),
            x if x == Self::ChainCommandBlock as u32 => Ok(Self::ChainCommandBlock),
            x if x == Self::FrostedIce as u32 => Ok(Self::FrostedIce),
            x if x == Self::MagmaBlock as u32 => Ok(Self::MagmaBlock),
            x if x == Self::NetherWartBlock as u32 => Ok(Self::NetherWartBlock),
            x if x == Self::RedNetherBricks as u32 => Ok(Self::RedNetherBricks),
            x if x == Self::BoneBlock as u32 => Ok(Self::BoneBlock),
            x if x == Self::StructureVoid as u32 => Ok(Self::StructureVoid),
            x if x == Self::Observer as u32 => Ok(Self::Observer),
            x if x == Self::ShulkerBox as u32 => Ok(Self::ShulkerBox),
            x if x == Self::WhiteShulkerBox as u32 => Ok(Self::WhiteShulkerBox),
            x if x == Self::OrangeShulkerBox as u32 => Ok(Self::OrangeShulkerBox),
            x if x == Self::MagentaShulkerBox as u32 => Ok(Self::MagentaShulkerBox),
            x if x == Self::LightBlueShulkerBox as u32 => Ok(Self::LightBlueShulkerBox),
            x if x == Self::YellowShulkerBox as u32 => Ok(Self::YellowShulkerBox),
            x if x == Self::LimeShulkerBox as u32 => Ok(Self::LimeShulkerBox),
            x if x == Self::PinkShulkerBox as u32 => Ok(Self::PinkShulkerBox),
            x if x == Self::GrayShulkerBox as u32 => Ok(Self::GrayShulkerBox),
            x if x == Self::LightGrayShulkerBox as u32 => Ok(Self::LightGrayShulkerBox),
            x if x == Self::CyanShulkerBox as u32 => Ok(Self::CyanShulkerBox),
            x if x == Self::PurpleShulkerBox as u32 => Ok(Self::PurpleShulkerBox),
            x if x == Self::BlueShulkerBox as u32 => Ok(Self::BlueShulkerBox),
            x if x == Self::BrownShulkerBox as u32 => Ok(Self::BrownShulkerBox),
            x if x == Self::GreenShulkerBox as u32 => Ok(Self::GreenShulkerBox),
            x if x == Self::RedShulkerBox as u32 => Ok(Self::RedShulkerBox),
            x if x == Self::BlackShulkerBox as u32 => Ok(Self::BlackShulkerBox),
            x if x == Self::WhiteGlazedTerracotta as u32 => Ok(Self::WhiteGlazedTerracotta),
            x if x == Self::OrangeGlazedTerracotta as u32 => Ok(Self::OrangeGlazedTerracotta),
            x if x == Self::MagentaGlazedTerracotta as u32 => Ok(Self::MagentaGlazedTerracotta),
            x if x == Self::LightBlueGlazedTerracotta as u32 => Ok(Self::LightBlueGlazedTerracotta),
            x if x == Self::YellowGlazedTerracotta as u32 => Ok(Self::YellowGlazedTerracotta),
            x if x == Self::LimeGlazedTerracotta as u32 => Ok(Self::LimeGlazedTerracotta),
            x if x == Self::PinkGlazedTerracotta as u32 => Ok(Self::PinkGlazedTerracotta),
            x if x == Self::GrayGlazedTerracotta as u32 => Ok(Self::GrayGlazedTerracotta),
            x if x == Self::LightGrayGlazedTerracotta as u32 => Ok(Self::LightGrayGlazedTerracotta),
            x if x == Self::CyanGlazedTerracotta as u32 => Ok(Self::CyanGlazedTerracotta),
            x if x == Self::PurpleGlazedTerracotta as u32 => Ok(Self::PurpleGlazedTerracotta),
            x if x == Self::BlueGlazedTerracotta as u32 => Ok(Self::BlueGlazedTerracotta),
            x if x == Self::BrownGlazedTerracotta as u32 => Ok(Self::BrownGlazedTerracotta),
            x if x == Self::GreenGlazedTerracotta as u32 => Ok(Self::GreenGlazedTerracotta),
            x if x == Self::RedGlazedTerracotta as u32 => Ok(Self::RedGlazedTerracotta),
            x if x == Self::BlackGlazedTerracotta as u32 => Ok(Self::BlackGlazedTerracotta),
            x if x == Self::WhiteConcrete as u32 => Ok(Self::WhiteConcrete),
            x if x == Self::OrangeConcrete as u32 => Ok(Self::OrangeConcrete),
            x if x == Self::MagentaConcrete as u32 => Ok(Self::MagentaConcrete),
            x if x == Self::LightBlueConcrete as u32 => Ok(Self::LightBlueConcrete),
            x if x == Self::YellowConcrete as u32 => Ok(Self::YellowConcrete),
            x if x == Self::LimeConcrete as u32 => Ok(Self::LimeConcrete),
            x if x == Self::PinkConcrete as u32 => Ok(Self::PinkConcrete),
            x if x == Self::GrayConcrete as u32 => Ok(Self::GrayConcrete),
            x if x == Self::LightGrayConcrete as u32 => Ok(Self::LightGrayConcrete),
            x if x == Self::CyanConcrete as u32 => Ok(Self::CyanConcrete),
            x if x == Self::PurpleConcrete as u32 => Ok(Self::PurpleConcrete),
            x if x == Self::BlueConcrete as u32 => Ok(Self::BlueConcrete),
            x if x == Self::BrownConcrete as u32 => Ok(Self::BrownConcrete),
            x if x == Self::GreenConcrete as u32 => Ok(Self::GreenConcrete),
            x if x == Self::RedConcrete as u32 => Ok(Self::RedConcrete),
            x if x == Self::BlackConcrete as u32 => Ok(Self::BlackConcrete),
            x if x == Self::WhiteConcretePowder as u32 => Ok(Self::WhiteConcretePowder),
            x if x == Self::OrangeConcretePowder as u32 => Ok(Self::OrangeConcretePowder),
            x if x == Self::MagentaConcretePowder as u32 => Ok(Self::MagentaConcretePowder),
            x if x == Self::LightBlueConcretePowder as u32 => Ok(Self::LightBlueConcretePowder),
            x if x == Self::YellowConcretePowder as u32 => Ok(Self::YellowConcretePowder),
            x if x == Self::LimeConcretePowder as u32 => Ok(Self::LimeConcretePowder),
            x if x == Self::PinkConcretePowder as u32 => Ok(Self::PinkConcretePowder),
            x if x == Self::GrayConcretePowder as u32 => Ok(Self::GrayConcretePowder),
            x if x == Self::LightGrayConcretePowder as u32 => Ok(Self::LightGrayConcretePowder),
            x if x == Self::CyanConcretePowder as u32 => Ok(Self::CyanConcretePowder),
            x if x == Self::PurpleConcretePowder as u32 => Ok(Self::PurpleConcretePowder),
            x if x == Self::BlueConcretePowder as u32 => Ok(Self::BlueConcretePowder),
            x if x == Self::BrownConcretePowder as u32 => Ok(Self::BrownConcretePowder),
            x if x == Self::GreenConcretePowder as u32 => Ok(Self::GreenConcretePowder),
            x if x == Self::RedConcretePowder as u32 => Ok(Self::RedConcretePowder),
            x if x == Self::BlackConcretePowder as u32 => Ok(Self::BlackConcretePowder),
            x if x == Self::Kelp as u32 => Ok(Self::Kelp),
            x if x == Self::KelpPlant as u32 => Ok(Self::KelpPlant),
            x if x == Self::DriedKelpBlock as u32 => Ok(Self::DriedKelpBlock),
            x if x == Self::TurtleEgg as u32 => Ok(Self::TurtleEgg),
            x if x == Self::DeadTubeCoralBlock as u32 => Ok(Self::DeadTubeCoralBlock),
            x if x == Self::DeadBrainCoralBlock as u32 => Ok(Self::DeadBrainCoralBlock),
            x if x == Self::DeadBubbleCoralBlock as u32 => Ok(Self::DeadBubbleCoralBlock),
            x if x == Self::DeadFireCoralBlock as u32 => Ok(Self::DeadFireCoralBlock),
            x if x == Self::DeadHornCoralBlock as u32 => Ok(Self::DeadHornCoralBlock),
            x if x == Self::TubeCoralBlock as u32 => Ok(Self::TubeCoralBlock),
            x if x == Self::BrainCoralBlock as u32 => Ok(Self::BrainCoralBlock),
            x if x == Self::BubbleCoralBlock as u32 => Ok(Self::BubbleCoralBlock),
            x if x == Self::FireCoralBlock as u32 => Ok(Self::FireCoralBlock),
            x if x == Self::HornCoralBlock as u32 => Ok(Self::HornCoralBlock),
            x if x == Self::DeadTubeCoral as u32 => Ok(Self::DeadTubeCoral),
            x if x == Self::DeadBrainCoral as u32 => Ok(Self::DeadBrainCoral),
            x if x == Self::DeadBubbleCoral as u32 => Ok(Self::DeadBubbleCoral),
            x if x == Self::DeadFireCoral as u32 => Ok(Self::DeadFireCoral),
            x if x == Self::DeadHornCoral as u32 => Ok(Self::DeadHornCoral),
            x if x == Self::TubeCoral as u32 => Ok(Self::TubeCoral),
            x if x == Self::BrainCoral as u32 => Ok(Self::BrainCoral),
            x if x == Self::BubbleCoral as u32 => Ok(Self::BubbleCoral),
            x if x == Self::FireCoral as u32 => Ok(Self::FireCoral),
            x if x == Self::HornCoral as u32 => Ok(Self::HornCoral),
            x if x == Self::DeadTubeCoralFan as u32 => Ok(Self::DeadTubeCoralFan),
            x if x == Self::DeadBrainCoralFan as u32 => Ok(Self::DeadBrainCoralFan),
            x if x == Self::DeadBubbleCoralFan as u32 => Ok(Self::DeadBubbleCoralFan),
            x if x == Self::DeadFireCoralFan as u32 => Ok(Self::DeadFireCoralFan),
            x if x == Self::DeadHornCoralFan as u32 => Ok(Self::DeadHornCoralFan),
            x if x == Self::TubeCoralFan as u32 => Ok(Self::TubeCoralFan),
            x if x == Self::BrainCoralFan as u32 => Ok(Self::BrainCoralFan),
            x if x == Self::BubbleCoralFan as u32 => Ok(Self::BubbleCoralFan),
            x if x == Self::FireCoralFan as u32 => Ok(Self::FireCoralFan),
            x if x == Self::HornCoralFan as u32 => Ok(Self::HornCoralFan),
            x if x == Self::DeadTubeCoralWallFan as u32 => Ok(Self::DeadTubeCoralWallFan),
            x if x == Self::DeadBrainCoralWallFan as u32 => Ok(Self::DeadBrainCoralWallFan),
            x if x == Self::DeadBubbleCoralWallFan as u32 => Ok(Self::DeadBubbleCoralWallFan),
            x if x == Self::DeadFireCoralWallFan as u32 => Ok(Self::DeadFireCoralWallFan),
            x if x == Self::DeadHornCoralWallFan as u32 => Ok(Self::DeadHornCoralWallFan),
            x if x == Self::TubeCoralWallFan as u32 => Ok(Self::TubeCoralWallFan),
            x if x == Self::BrainCoralWallFan as u32 => Ok(Self::BrainCoralWallFan),
            x if x == Self::BubbleCoralWallFan as u32 => Ok(Self::BubbleCoralWallFan),
            x if x == Self::FireCoralWallFan as u32 => Ok(Self::FireCoralWallFan),
            x if x == Self::HornCoralWallFan as u32 => Ok(Self::HornCoralWallFan),
            x if x == Self::SeaPickle as u32 => Ok(Self::SeaPickle),
            x if x == Self::BlueIce as u32 => Ok(Self::BlueIce),
            x if x == Self::Conduit as u32 => Ok(Self::Conduit),
            x if x == Self::BambooSapling as u32 => Ok(Self::BambooSapling),
            x if x == Self::Bamboo as u32 => Ok(Self::Bamboo),
            x if x == Self::PottedBamboo as u32 => Ok(Self::PottedBamboo),
            x if x == Self::VoidAir as u32 => Ok(Self::VoidAir),
            x if x == Self::CaveAir as u32 => Ok(Self::CaveAir),
            x if x == Self::BubbleColumn as u32 => Ok(Self::BubbleColumn),
            x if x == Self::PolishedGraniteStairs as u32 => Ok(Self::PolishedGraniteStairs),
            x if x == Self::SmoothRedSandstoneStairs as u32 => Ok(Self::SmoothRedSandstoneStairs),
            x if x == Self::MossyStoneBrickStairs as u32 => Ok(Self::MossyStoneBrickStairs),
            x if x == Self::PolishedDioriteStairs as u32 => Ok(Self::PolishedDioriteStairs),
            x if x == Self::MossyCobblestoneStairs as u32 => Ok(Self::MossyCobblestoneStairs),
            x if x == Self::EndStoneBrickStairs as u32 => Ok(Self::EndStoneBrickStairs),
            x if x == Self::StoneStairs as u32 => Ok(Self::StoneStairs),
            x if x == Self::SmoothSandstoneStairs as u32 => Ok(Self::SmoothSandstoneStairs),
            x if x == Self::SmoothQuartzStairs as u32 => Ok(Self::SmoothQuartzStairs),
            x if x == Self::GraniteStairs as u32 => Ok(Self::GraniteStairs),
            x if x == Self::AndesiteStairs as u32 => Ok(Self::AndesiteStairs),
            x if x == Self::RedNetherBrickStairs as u32 => Ok(Self::RedNetherBrickStairs),
            x if x == Self::PolishedAndesiteStairs as u32 => Ok(Self::PolishedAndesiteStairs),
            x if x == Self::DioriteStairs as u32 => Ok(Self::DioriteStairs),
            x if x == Self::PolishedGraniteSlab as u32 => Ok(Self::PolishedGraniteSlab),
            x if x == Self::SmoothRedSandstoneSlab as u32 => Ok(Self::SmoothRedSandstoneSlab),
            x if x == Self::MossyStoneBrickSlab as u32 => Ok(Self::MossyStoneBrickSlab),
            x if x == Self::PolishedDioriteSlab as u32 => Ok(Self::PolishedDioriteSlab),
            x if x == Self::MossyCobblestoneSlab as u32 => Ok(Self::MossyCobblestoneSlab),
            x if x == Self::EndStoneBrickSlab as u32 => Ok(Self::EndStoneBrickSlab),
            x if x == Self::SmoothSandstoneSlab as u32 => Ok(Self::SmoothSandstoneSlab),
            x if x == Self::SmoothQuartzSlab as u32 => Ok(Self::SmoothQuartzSlab),
            x if x == Self::GraniteSlab as u32 => Ok(Self::GraniteSlab),
            x if x == Self::AndesiteSlab as u32 => Ok(Self::AndesiteSlab),
            x if x == Self::RedNetherBrickSlab as u32 => Ok(Self::RedNetherBrickSlab),
            x if x == Self::PolishedAndesiteSlab as u32 => Ok(Self::PolishedAndesiteSlab),
            x if x == Self::DioriteSlab as u32 => Ok(Self::DioriteSlab),
            x if x == Self::BrickWall as u32 => Ok(Self::BrickWall),
            x if x == Self::PrismarineWall as u32 => Ok(Self::PrismarineWall),
            x if x == Self::RedSandstoneWall as u32 => Ok(Self::RedSandstoneWall),
            x if x == Self::MossyStoneBrickWall as u32 => Ok(Self::MossyStoneBrickWall),
            x if x == Self::GraniteWall as u32 => Ok(Self::GraniteWall),
            x if x == Self::StoneBrickWall as u32 => Ok(Self::StoneBrickWall),
            x if x == Self::MudBrickWall as u32 => Ok(Self::MudBrickWall),
            x if x == Self::NetherBrickWall as u32 => Ok(Self::NetherBrickWall),
            x if x == Self::AndesiteWall as u32 => Ok(Self::AndesiteWall),
            x if x == Self::RedNetherBrickWall as u32 => Ok(Self::RedNetherBrickWall),
            x if x == Self::SandstoneWall as u32 => Ok(Self::SandstoneWall),
            x if x == Self::EndStoneBrickWall as u32 => Ok(Self::EndStoneBrickWall),
            x if x == Self::DioriteWall as u32 => Ok(Self::DioriteWall),
            x if x == Self::Scaffolding as u32 => Ok(Self::Scaffolding),
            x if x == Self::Loom as u32 => Ok(Self::Loom),
            x if x == Self::Barrel as u32 => Ok(Self::Barrel),
            x if x == Self::Smoker as u32 => Ok(Self::Smoker),
            x if x == Self::BlastFurnace as u32 => Ok(Self::BlastFurnace),
            x if x == Self::CartographyTable as u32 => Ok(Self::CartographyTable),
            x if x == Self::FletchingTable as u32 => Ok(Self::FletchingTable),
            x if x == Self::Grindstone as u32 => Ok(Self::Grindstone),
            x if x == Self::Lectern as u32 => Ok(Self::Lectern),
            x if x == Self::SmithingTable as u32 => Ok(Self::SmithingTable),
            x if x == Self::Stonecutter as u32 => Ok(Self::Stonecutter),
            x if x == Self::Bell as u32 => Ok(Self::Bell),
            x if x == Self::Lantern as u32 => Ok(Self::Lantern),
            x if x == Self::SoulLantern as u32 => Ok(Self::SoulLantern),
            x if x == Self::Campfire as u32 => Ok(Self::Campfire),
            x if x == Self::SoulCampfire as u32 => Ok(Self::SoulCampfire),
            x if x == Self::SweetBerryBush as u32 => Ok(Self::SweetBerryBush),
            x if x == Self::WarpedStem as u32 => Ok(Self::WarpedStem),
            x if x == Self::StrippedWarpedStem as u32 => Ok(Self::StrippedWarpedStem),
            x if x == Self::WarpedHyphae as u32 => Ok(Self::WarpedHyphae),
            x if x == Self::StrippedWarpedHyphae as u32 => Ok(Self::StrippedWarpedHyphae),
            x if x == Self::WarpedNylium as u32 => Ok(Self::WarpedNylium),
            x if x == Self::WarpedFungus as u32 => Ok(Self::WarpedFungus),
            x if x == Self::WarpedWartBlock as u32 => Ok(Self::WarpedWartBlock),
            x if x == Self::WarpedRoots as u32 => Ok(Self::WarpedRoots),
            x if x == Self::NetherSprouts as u32 => Ok(Self::NetherSprouts),
            x if x == Self::CrimsonStem as u32 => Ok(Self::CrimsonStem),
            x if x == Self::StrippedCrimsonStem as u32 => Ok(Self::StrippedCrimsonStem),
            x if x == Self::CrimsonHyphae as u32 => Ok(Self::CrimsonHyphae),
            x if x == Self::StrippedCrimsonHyphae as u32 => Ok(Self::StrippedCrimsonHyphae),
            x if x == Self::CrimsonNylium as u32 => Ok(Self::CrimsonNylium),
            x if x == Self::CrimsonFungus as u32 => Ok(Self::CrimsonFungus),
            x if x == Self::Shroomlight as u32 => Ok(Self::Shroomlight),
            x if x == Self::WeepingVines as u32 => Ok(Self::WeepingVines),
            x if x == Self::WeepingVinesPlant as u32 => Ok(Self::WeepingVinesPlant),
            x if x == Self::TwistingVines as u32 => Ok(Self::TwistingVines),
            x if x == Self::TwistingVinesPlant as u32 => Ok(Self::TwistingVinesPlant),
            x if x == Self::CrimsonRoots as u32 => Ok(Self::CrimsonRoots),
            x if x == Self::CrimsonPlanks as u32 => Ok(Self::CrimsonPlanks),
            x if x == Self::WarpedPlanks as u32 => Ok(Self::WarpedPlanks),
            x if x == Self::CrimsonSlab as u32 => Ok(Self::CrimsonSlab),
            x if x == Self::WarpedSlab as u32 => Ok(Self::WarpedSlab),
            x if x == Self::CrimsonPressurePlate as u32 => Ok(Self::CrimsonPressurePlate),
            x if x == Self::WarpedPressurePlate as u32 => Ok(Self::WarpedPressurePlate),
            x if x == Self::CrimsonFence as u32 => Ok(Self::CrimsonFence),
            x if x == Self::WarpedFence as u32 => Ok(Self::WarpedFence),
            x if x == Self::CrimsonTrapdoor as u32 => Ok(Self::CrimsonTrapdoor),
            x if x == Self::WarpedTrapdoor as u32 => Ok(Self::WarpedTrapdoor),
            x if x == Self::CrimsonFenceGate as u32 => Ok(Self::CrimsonFenceGate),
            x if x == Self::WarpedFenceGate as u32 => Ok(Self::WarpedFenceGate),
            x if x == Self::CrimsonStairs as u32 => Ok(Self::CrimsonStairs),
            x if x == Self::WarpedStairs as u32 => Ok(Self::WarpedStairs),
            x if x == Self::CrimsonButton as u32 => Ok(Self::CrimsonButton),
            x if x == Self::WarpedButton as u32 => Ok(Self::WarpedButton),
            x if x == Self::CrimsonDoor as u32 => Ok(Self::CrimsonDoor),
            x if x == Self::WarpedDoor as u32 => Ok(Self::WarpedDoor),
            x if x == Self::CrimsonSign as u32 => Ok(Self::CrimsonSign),
            x if x == Self::WarpedSign as u32 => Ok(Self::WarpedSign),
            x if x == Self::CrimsonWallSign as u32 => Ok(Self::CrimsonWallSign),
            x if x == Self::WarpedWallSign as u32 => Ok(Self::WarpedWallSign),
            x if x == Self::StructureBlock as u32 => Ok(Self::StructureBlock),
            x if x == Self::Jigsaw as u32 => Ok(Self::Jigsaw),
            x if x == Self::Composter as u32 => Ok(Self::Composter),
            x if x == Self::Target as u32 => Ok(Self::Target),
            x if x == Self::BeeNest as u32 => Ok(Self::BeeNest),
            x if x == Self::Beehive as u32 => Ok(Self::Beehive),
            x if x == Self::HoneyBlock as u32 => Ok(Self::HoneyBlock),
            x if x == Self::HoneycombBlock as u32 => Ok(Self::HoneycombBlock),
            x if x == Self::NetheriteBlock as u32 => Ok(Self::NetheriteBlock),
            x if x == Self::AncientDebris as u32 => Ok(Self::AncientDebris),
            x if x == Self::CryingObsidian as u32 => Ok(Self::CryingObsidian),
            x if x == Self::RespawnAnchor as u32 => Ok(Self::RespawnAnchor),
            x if x == Self::PottedCrimsonFungus as u32 => Ok(Self::PottedCrimsonFungus),
            x if x == Self::PottedWarpedFungus as u32 => Ok(Self::PottedWarpedFungus),
            x if x == Self::PottedCrimsonRoots as u32 => Ok(Self::PottedCrimsonRoots),
            x if x == Self::PottedWarpedRoots as u32 => Ok(Self::PottedWarpedRoots),
            x if x == Self::Lodestone as u32 => Ok(Self::Lodestone),
            x if x == Self::Blackstone as u32 => Ok(Self::Blackstone),
            x if x == Self::BlackstoneStairs as u32 => Ok(Self::BlackstoneStairs),
            x if x == Self::BlackstoneWall as u32 => Ok(Self::BlackstoneWall),
            x if x == Self::BlackstoneSlab as u32 => Ok(Self::BlackstoneSlab),
            x if x == Self::PolishedBlackstone as u32 => Ok(Self::PolishedBlackstone),
            x if x == Self::PolishedBlackstoneBricks as u32 => Ok(Self::PolishedBlackstoneBricks),
            x if x == Self::CrackedPolishedBlackstoneBricks as u32 => Ok(Self::CrackedPolishedBlackstoneBricks),
            x if x == Self::ChiseledPolishedBlackstone as u32 => Ok(Self::ChiseledPolishedBlackstone),
            x if x == Self::PolishedBlackstoneBrickSlab as u32 => Ok(Self::PolishedBlackstoneBrickSlab),
            x if x == Self::PolishedBlackstoneBrickStairs as u32 => Ok(Self::PolishedBlackstoneBrickStairs),
            x if x == Self::PolishedBlackstoneBrickWall as u32 => Ok(Self::PolishedBlackstoneBrickWall),
            x if x == Self::GildedBlackstone as u32 => Ok(Self::GildedBlackstone),
            x if x == Self::PolishedBlackstoneStairs as u32 => Ok(Self::PolishedBlackstoneStairs),
            x if x == Self::PolishedBlackstoneSlab as u32 => Ok(Self::PolishedBlackstoneSlab),
            x if x == Self::PolishedBlackstonePressurePlate as u32 => Ok(Self::PolishedBlackstonePressurePlate),
            x if x == Self::PolishedBlackstoneButton as u32 => Ok(Self::PolishedBlackstoneButton),
            x if x == Self::PolishedBlackstoneWall as u32 => Ok(Self::PolishedBlackstoneWall),
            x if x == Self::ChiseledNetherBricks as u32 => Ok(Self::ChiseledNetherBricks),
            x if x == Self::CrackedNetherBricks as u32 => Ok(Self::CrackedNetherBricks),
            x if x == Self::QuartzBricks as u32 => Ok(Self::QuartzBricks),
            x if x == Self::Candle as u32 => Ok(Self::Candle),
            x if x == Self::WhiteCandle as u32 => Ok(Self::WhiteCandle),
            x if x == Self::OrangeCandle as u32 => Ok(Self::OrangeCandle),
            x if x == Self::MagentaCandle as u32 => Ok(Self::MagentaCandle),
            x if x == Self::LightBlueCandle as u32 => Ok(Self::LightBlueCandle),
            x if x == Self::YellowCandle as u32 => Ok(Self::YellowCandle),
            x if x == Self::LimeCandle as u32 => Ok(Self::LimeCandle),
            x if x == Self::PinkCandle as u32 => Ok(Self::PinkCandle),
            x if x == Self::GrayCandle as u32 => Ok(Self::GrayCandle),
            x if x == Self::LightGrayCandle as u32 => Ok(Self::LightGrayCandle),
            x if x == Self::CyanCandle as u32 => Ok(Self::CyanCandle),
            x if x == Self::PurpleCandle as u32 => Ok(Self::PurpleCandle),
            x if x == Self::BlueCandle as u32 => Ok(Self::BlueCandle),
            x if x == Self::BrownCandle as u32 => Ok(Self::BrownCandle),
            x if x == Self::GreenCandle as u32 => Ok(Self::GreenCandle),
            x if x == Self::RedCandle as u32 => Ok(Self::RedCandle),
            x if x == Self::BlackCandle as u32 => Ok(Self::BlackCandle),
            x if x == Self::CandleCake as u32 => Ok(Self::CandleCake),
            x if x == Self::WhiteCandleCake as u32 => Ok(Self::WhiteCandleCake),
            x if x == Self::OrangeCandleCake as u32 => Ok(Self::OrangeCandleCake),
            x if x == Self::MagentaCandleCake as u32 => Ok(Self::MagentaCandleCake),
            x if x == Self::LightBlueCandleCake as u32 => Ok(Self::LightBlueCandleCake),
            x if x == Self::YellowCandleCake as u32 => Ok(Self::YellowCandleCake),
            x if x == Self::LimeCandleCake as u32 => Ok(Self::LimeCandleCake),
            x if x == Self::PinkCandleCake as u32 => Ok(Self::PinkCandleCake),
            x if x == Self::GrayCandleCake as u32 => Ok(Self::GrayCandleCake),
            x if x == Self::LightGrayCandleCake as u32 => Ok(Self::LightGrayCandleCake),
            x if x == Self::CyanCandleCake as u32 => Ok(Self::CyanCandleCake),
            x if x == Self::PurpleCandleCake as u32 => Ok(Self::PurpleCandleCake),
            x if x == Self::BlueCandleCake as u32 => Ok(Self::BlueCandleCake),
            x if x == Self::BrownCandleCake as u32 => Ok(Self::BrownCandleCake),
            x if x == Self::GreenCandleCake as u32 => Ok(Self::GreenCandleCake),
            x if x == Self::RedCandleCake as u32 => Ok(Self::RedCandleCake),
            x if x == Self::BlackCandleCake as u32 => Ok(Self::BlackCandleCake),
            x if x == Self::AmethystBlock as u32 => Ok(Self::AmethystBlock),
            x if x == Self::BuddingAmethyst as u32 => Ok(Self::BuddingAmethyst),
            x if x == Self::AmethystCluster as u32 => Ok(Self::AmethystCluster),
            x if x == Self::LargeAmethystBud as u32 => Ok(Self::LargeAmethystBud),
            x if x == Self::MediumAmethystBud as u32 => Ok(Self::MediumAmethystBud),
            x if x == Self::SmallAmethystBud as u32 => Ok(Self::SmallAmethystBud),
            x if x == Self::Tuff as u32 => Ok(Self::Tuff),
            x if x == Self::Calcite as u32 => Ok(Self::Calcite),
            x if x == Self::TintedGlass as u32 => Ok(Self::TintedGlass),
            x if x == Self::PowderSnow as u32 => Ok(Self::PowderSnow),
            x if x == Self::SculkSensor as u32 => Ok(Self::SculkSensor),
            x if x == Self::Sculk as u32 => Ok(Self::Sculk),
            x if x == Self::SculkVein as u32 => Ok(Self::SculkVein),
            x if x == Self::SculkCatalyst as u32 => Ok(Self::SculkCatalyst),
            x if x == Self::SculkShrieker as u32 => Ok(Self::SculkShrieker),
            x if x == Self::OxidizedCopper as u32 => Ok(Self::OxidizedCopper),
            x if x == Self::WeatheredCopper as u32 => Ok(Self::WeatheredCopper),
            x if x == Self::ExposedCopper as u32 => Ok(Self::ExposedCopper),
            x if x == Self::CopperBlock as u32 => Ok(Self::CopperBlock),
            x if x == Self::CopperOre as u32 => Ok(Self::CopperOre),
            x if x == Self::DeepslateCopperOre as u32 => Ok(Self::DeepslateCopperOre),
            x if x == Self::OxidizedCutCopper as u32 => Ok(Self::OxidizedCutCopper),
            x if x == Self::WeatheredCutCopper as u32 => Ok(Self::WeatheredCutCopper),
            x if x == Self::ExposedCutCopper as u32 => Ok(Self::ExposedCutCopper),
            x if x == Self::CutCopper as u32 => Ok(Self::CutCopper),
            x if x == Self::OxidizedCutCopperStairs as u32 => Ok(Self::OxidizedCutCopperStairs),
            x if x == Self::WeatheredCutCopperStairs as u32 => Ok(Self::WeatheredCutCopperStairs),
            x if x == Self::ExposedCutCopperStairs as u32 => Ok(Self::ExposedCutCopperStairs),
            x if x == Self::CutCopperStairs as u32 => Ok(Self::CutCopperStairs),
            x if x == Self::OxidizedCutCopperSlab as u32 => Ok(Self::OxidizedCutCopperSlab),
            x if x == Self::WeatheredCutCopperSlab as u32 => Ok(Self::WeatheredCutCopperSlab),
            x if x == Self::ExposedCutCopperSlab as u32 => Ok(Self::ExposedCutCopperSlab),
            x if x == Self::CutCopperSlab as u32 => Ok(Self::CutCopperSlab),
            x if x == Self::WaxedCopperBlock as u32 => Ok(Self::WaxedCopperBlock),
            x if x == Self::WaxedWeatheredCopper as u32 => Ok(Self::WaxedWeatheredCopper),
            x if x == Self::WaxedExposedCopper as u32 => Ok(Self::WaxedExposedCopper),
            x if x == Self::WaxedOxidizedCopper as u32 => Ok(Self::WaxedOxidizedCopper),
            x if x == Self::WaxedOxidizedCutCopper as u32 => Ok(Self::WaxedOxidizedCutCopper),
            x if x == Self::WaxedWeatheredCutCopper as u32 => Ok(Self::WaxedWeatheredCutCopper),
            x if x == Self::WaxedExposedCutCopper as u32 => Ok(Self::WaxedExposedCutCopper),
            x if x == Self::WaxedCutCopper as u32 => Ok(Self::WaxedCutCopper),
            x if x == Self::WaxedOxidizedCutCopperStairs as u32 => Ok(Self::WaxedOxidizedCutCopperStairs),
            x if x == Self::WaxedWeatheredCutCopperStairs as u32 => Ok(Self::WaxedWeatheredCutCopperStairs),
            x if x == Self::WaxedExposedCutCopperStairs as u32 => Ok(Self::WaxedExposedCutCopperStairs),
            x if x == Self::WaxedCutCopperStairs as u32 => Ok(Self::WaxedCutCopperStairs),
            x if x == Self::WaxedOxidizedCutCopperSlab as u32 => Ok(Self::WaxedOxidizedCutCopperSlab),
            x if x == Self::WaxedWeatheredCutCopperSlab as u32 => Ok(Self::WaxedWeatheredCutCopperSlab),
            x if x == Self::WaxedExposedCutCopperSlab as u32 => Ok(Self::WaxedExposedCutCopperSlab),
            x if x == Self::WaxedCutCopperSlab as u32 => Ok(Self::WaxedCutCopperSlab),
            x if x == Self::LightningRod as u32 => Ok(Self::LightningRod),
            x if x == Self::PointedDripstone as u32 => Ok(Self::PointedDripstone),
            x if x == Self::DripstoneBlock as u32 => Ok(Self::DripstoneBlock),
            x if x == Self::CaveVines as u32 => Ok(Self::CaveVines),
            x if x == Self::CaveVinesPlant as u32 => Ok(Self::CaveVinesPlant),
            x if x == Self::SporeBlossom as u32 => Ok(Self::SporeBlossom),
            x if x == Self::Azalea as u32 => Ok(Self::Azalea),
            x if x == Self::FloweringAzalea as u32 => Ok(Self::FloweringAzalea),
            x if x == Self::MossCarpet as u32 => Ok(Self::MossCarpet),
            x if x == Self::MossBlock as u32 => Ok(Self::MossBlock),
            x if x == Self::BigDripleaf as u32 => Ok(Self::BigDripleaf),
            x if x == Self::BigDripleafStem as u32 => Ok(Self::BigDripleafStem),
            x if x == Self::SmallDripleaf as u32 => Ok(Self::SmallDripleaf),
            x if x == Self::HangingRoots as u32 => Ok(Self::HangingRoots),
            x if x == Self::RootedDirt as u32 => Ok(Self::RootedDirt),
            x if x == Self::Mud as u32 => Ok(Self::Mud),
            x if x == Self::Deepslate as u32 => Ok(Self::Deepslate),
            x if x == Self::CobbledDeepslate as u32 => Ok(Self::CobbledDeepslate),
            x if x == Self::CobbledDeepslateStairs as u32 => Ok(Self::CobbledDeepslateStairs),
            x if x == Self::CobbledDeepslateSlab as u32 => Ok(Self::CobbledDeepslateSlab),
            x if x == Self::CobbledDeepslateWall as u32 => Ok(Self::CobbledDeepslateWall),
            x if x == Self::PolishedDeepslate as u32 => Ok(Self::PolishedDeepslate),
            x if x == Self::PolishedDeepslateStairs as u32 => Ok(Self::PolishedDeepslateStairs),
            x if x == Self::PolishedDeepslateSlab as u32 => Ok(Self::PolishedDeepslateSlab),
            x if x == Self::PolishedDeepslateWall as u32 => Ok(Self::PolishedDeepslateWall),
            x if x == Self::DeepslateTiles as u32 => Ok(Self::DeepslateTiles),
            x if x == Self::DeepslateTileStairs as u32 => Ok(Self::DeepslateTileStairs),
            x if x == Self::DeepslateTileSlab as u32 => Ok(Self::DeepslateTileSlab),
            x if x == Self::DeepslateTileWall as u32 => Ok(Self::DeepslateTileWall),
            x if x == Self::DeepslateBricks as u32 => Ok(Self::DeepslateBricks),
            x if x == Self::DeepslateBrickStairs as u32 => Ok(Self::DeepslateBrickStairs),
            x if x == Self::DeepslateBrickSlab as u32 => Ok(Self::DeepslateBrickSlab),
            x if x == Self::DeepslateBrickWall as u32 => Ok(Self::DeepslateBrickWall),
            x if x == Self::ChiseledDeepslate as u32 => Ok(Self::ChiseledDeepslate),
            x if x == Self::CrackedDeepslateBricks as u32 => Ok(Self::CrackedDeepslateBricks),
            x if x == Self::CrackedDeepslateTiles as u32 => Ok(Self::CrackedDeepslateTiles),
            x if x == Self::InfestedDeepslate as u32 => Ok(Self::InfestedDeepslate),
            x if x == Self::SmoothBasalt as u32 => Ok(Self::SmoothBasalt),
            x if x == Self::RawIronBlock as u32 => Ok(Self::RawIronBlock),
            x if x == Self::RawCopperBlock as u32 => Ok(Self::RawCopperBlock),
            x if x == Self::RawGoldBlock as u32 => Ok(Self::RawGoldBlock),
            x if x == Self::PottedAzaleaBush as u32 => Ok(Self::PottedAzaleaBush),
            x if x == Self::PottedFloweringAzaleaBush as u32 => Ok(Self::PottedFloweringAzaleaBush),
            x if x == Self::OchreFroglight as u32 => Ok(Self::OchreFroglight),
            x if x == Self::VerdantFroglight as u32 => Ok(Self::VerdantFroglight),
            x if x == Self::PearlescentFroglight as u32 => Ok(Self::PearlescentFroglight),
            x if x == Self::Frogspawn as u32 => Ok(Self::Frogspawn),
            x if x == Self::ReinforcedDeepslate as u32 => Ok(Self::ReinforcedDeepslate),
            _ => Err(Self::Error::EnumOutOfBound)
        }
    }
}
