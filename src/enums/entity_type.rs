/*
 * THIS FILE IS AUTOGENERATED BY build.rs
 * MODIFICATIONS WILL BE OVERWRITTEN
 */

#[derive(Clone, Copy, Eq, PartialEq, Debug)]
pub enum EntityType {
    Allay = 0,
    AreaEffectCloud = 1,
    ArmorStand = 2,
    Arrow = 3,
    Axolotl = 4,
    Bat = 5,
    Bee = 6,
    Blaze = 7,
    Boat = 8,
    ChestBoat = 9,
    Cat = 10,
    CaveSpider = 11,
    Chicken = 12,
    Cod = 13,
    Cow = 14,
    Creeper = 15,
    Dolphin = 16,
    Donkey = 17,
    DragonFireball = 18,
    Drowned = 19,
    ElderGuardian = 20,
    EndCrystal = 21,
    EnderDragon = 22,
    Enderman = 23,
    Endermite = 24,
    Evoker = 25,
    EvokerFangs = 26,
    ExperienceOrb = 27,
    EyeOfEnder = 28,
    FallingBlock = 29,
    FireworkRocket = 30,
    Fox = 31,
    Frog = 32,
    Ghast = 33,
    Giant = 34,
    GlowItemFrame = 35,
    GlowSquid = 36,
    Goat = 37,
    Guardian = 38,
    Hoglin = 39,
    Horse = 40,
    Husk = 41,
    Illusioner = 42,
    IronGolem = 43,
    Item = 44,
    ItemFrame = 45,
    Fireball = 46,
    LeashKnot = 47,
    LightningBolt = 48,
    Llama = 49,
    LlamaSpit = 50,
    MagmaCube = 51,
    Marker = 52,
    Minecart = 53,
    ChestMinecart = 54,
    CommandBlockMinecart = 55,
    FurnaceMinecart = 56,
    HopperMinecart = 57,
    SpawnerMinecart = 58,
    TntMinecart = 59,
    Mule = 60,
    Mooshroom = 61,
    Ocelot = 62,
    Painting = 63,
    Panda = 64,
    Parrot = 65,
    Phantom = 66,
    Pig = 67,
    Piglin = 68,
    PiglinBrute = 69,
    Pillager = 70,
    PolarBear = 71,
    Tnt = 72,
    Pufferfish = 73,
    Rabbit = 74,
    Ravager = 75,
    Salmon = 76,
    Sheep = 77,
    Shulker = 78,
    ShulkerBullet = 79,
    Silverfish = 80,
    Skeleton = 81,
    SkeletonHorse = 82,
    Slime = 83,
    SmallFireball = 84,
    SnowGolem = 85,
    Snowball = 86,
    SpectralArrow = 87,
    Spider = 88,
    Squid = 89,
    Stray = 90,
    Strider = 91,
    Tadpole = 92,
    Egg = 93,
    EnderPearl = 94,
    ExperienceBottle = 95,
    Potion = 96,
    Trident = 97,
    TraderLlama = 98,
    TropicalFish = 99,
    Turtle = 100,
    Vex = 101,
    Villager = 102,
    Vindicator = 103,
    WanderingTrader = 104,
    Warden = 105,
    Witch = 106,
    Wither = 107,
    WitherSkeleton = 108,
    WitherSkull = 109,
    Wolf = 110,
    Zoglin = 111,
    Zombie = 112,
    ZombieHorse = 113,
    ZombieVillager = 114,
    ZombifiedPiglin = 115,
    Player = 116,
    FishingBobber = 117,
}

use std::convert::TryFrom;
impl TryFrom<u32> for EntityType {
    type Error = crate::Error;
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        match value {
            x if x == Self::Allay as u32 => Ok(Self::Allay),
            x if x == Self::AreaEffectCloud as u32 => Ok(Self::AreaEffectCloud),
            x if x == Self::ArmorStand as u32 => Ok(Self::ArmorStand),
            x if x == Self::Arrow as u32 => Ok(Self::Arrow),
            x if x == Self::Axolotl as u32 => Ok(Self::Axolotl),
            x if x == Self::Bat as u32 => Ok(Self::Bat),
            x if x == Self::Bee as u32 => Ok(Self::Bee),
            x if x == Self::Blaze as u32 => Ok(Self::Blaze),
            x if x == Self::Boat as u32 => Ok(Self::Boat),
            x if x == Self::ChestBoat as u32 => Ok(Self::ChestBoat),
            x if x == Self::Cat as u32 => Ok(Self::Cat),
            x if x == Self::CaveSpider as u32 => Ok(Self::CaveSpider),
            x if x == Self::Chicken as u32 => Ok(Self::Chicken),
            x if x == Self::Cod as u32 => Ok(Self::Cod),
            x if x == Self::Cow as u32 => Ok(Self::Cow),
            x if x == Self::Creeper as u32 => Ok(Self::Creeper),
            x if x == Self::Dolphin as u32 => Ok(Self::Dolphin),
            x if x == Self::Donkey as u32 => Ok(Self::Donkey),
            x if x == Self::DragonFireball as u32 => Ok(Self::DragonFireball),
            x if x == Self::Drowned as u32 => Ok(Self::Drowned),
            x if x == Self::ElderGuardian as u32 => Ok(Self::ElderGuardian),
            x if x == Self::EndCrystal as u32 => Ok(Self::EndCrystal),
            x if x == Self::EnderDragon as u32 => Ok(Self::EnderDragon),
            x if x == Self::Enderman as u32 => Ok(Self::Enderman),
            x if x == Self::Endermite as u32 => Ok(Self::Endermite),
            x if x == Self::Evoker as u32 => Ok(Self::Evoker),
            x if x == Self::EvokerFangs as u32 => Ok(Self::EvokerFangs),
            x if x == Self::ExperienceOrb as u32 => Ok(Self::ExperienceOrb),
            x if x == Self::EyeOfEnder as u32 => Ok(Self::EyeOfEnder),
            x if x == Self::FallingBlock as u32 => Ok(Self::FallingBlock),
            x if x == Self::FireworkRocket as u32 => Ok(Self::FireworkRocket),
            x if x == Self::Fox as u32 => Ok(Self::Fox),
            x if x == Self::Frog as u32 => Ok(Self::Frog),
            x if x == Self::Ghast as u32 => Ok(Self::Ghast),
            x if x == Self::Giant as u32 => Ok(Self::Giant),
            x if x == Self::GlowItemFrame as u32 => Ok(Self::GlowItemFrame),
            x if x == Self::GlowSquid as u32 => Ok(Self::GlowSquid),
            x if x == Self::Goat as u32 => Ok(Self::Goat),
            x if x == Self::Guardian as u32 => Ok(Self::Guardian),
            x if x == Self::Hoglin as u32 => Ok(Self::Hoglin),
            x if x == Self::Horse as u32 => Ok(Self::Horse),
            x if x == Self::Husk as u32 => Ok(Self::Husk),
            x if x == Self::Illusioner as u32 => Ok(Self::Illusioner),
            x if x == Self::IronGolem as u32 => Ok(Self::IronGolem),
            x if x == Self::Item as u32 => Ok(Self::Item),
            x if x == Self::ItemFrame as u32 => Ok(Self::ItemFrame),
            x if x == Self::Fireball as u32 => Ok(Self::Fireball),
            x if x == Self::LeashKnot as u32 => Ok(Self::LeashKnot),
            x if x == Self::LightningBolt as u32 => Ok(Self::LightningBolt),
            x if x == Self::Llama as u32 => Ok(Self::Llama),
            x if x == Self::LlamaSpit as u32 => Ok(Self::LlamaSpit),
            x if x == Self::MagmaCube as u32 => Ok(Self::MagmaCube),
            x if x == Self::Marker as u32 => Ok(Self::Marker),
            x if x == Self::Minecart as u32 => Ok(Self::Minecart),
            x if x == Self::ChestMinecart as u32 => Ok(Self::ChestMinecart),
            x if x == Self::CommandBlockMinecart as u32 => Ok(Self::CommandBlockMinecart),
            x if x == Self::FurnaceMinecart as u32 => Ok(Self::FurnaceMinecart),
            x if x == Self::HopperMinecart as u32 => Ok(Self::HopperMinecart),
            x if x == Self::SpawnerMinecart as u32 => Ok(Self::SpawnerMinecart),
            x if x == Self::TntMinecart as u32 => Ok(Self::TntMinecart),
            x if x == Self::Mule as u32 => Ok(Self::Mule),
            x if x == Self::Mooshroom as u32 => Ok(Self::Mooshroom),
            x if x == Self::Ocelot as u32 => Ok(Self::Ocelot),
            x if x == Self::Painting as u32 => Ok(Self::Painting),
            x if x == Self::Panda as u32 => Ok(Self::Panda),
            x if x == Self::Parrot as u32 => Ok(Self::Parrot),
            x if x == Self::Phantom as u32 => Ok(Self::Phantom),
            x if x == Self::Pig as u32 => Ok(Self::Pig),
            x if x == Self::Piglin as u32 => Ok(Self::Piglin),
            x if x == Self::PiglinBrute as u32 => Ok(Self::PiglinBrute),
            x if x == Self::Pillager as u32 => Ok(Self::Pillager),
            x if x == Self::PolarBear as u32 => Ok(Self::PolarBear),
            x if x == Self::Tnt as u32 => Ok(Self::Tnt),
            x if x == Self::Pufferfish as u32 => Ok(Self::Pufferfish),
            x if x == Self::Rabbit as u32 => Ok(Self::Rabbit),
            x if x == Self::Ravager as u32 => Ok(Self::Ravager),
            x if x == Self::Salmon as u32 => Ok(Self::Salmon),
            x if x == Self::Sheep as u32 => Ok(Self::Sheep),
            x if x == Self::Shulker as u32 => Ok(Self::Shulker),
            x if x == Self::ShulkerBullet as u32 => Ok(Self::ShulkerBullet),
            x if x == Self::Silverfish as u32 => Ok(Self::Silverfish),
            x if x == Self::Skeleton as u32 => Ok(Self::Skeleton),
            x if x == Self::SkeletonHorse as u32 => Ok(Self::SkeletonHorse),
            x if x == Self::Slime as u32 => Ok(Self::Slime),
            x if x == Self::SmallFireball as u32 => Ok(Self::SmallFireball),
            x if x == Self::SnowGolem as u32 => Ok(Self::SnowGolem),
            x if x == Self::Snowball as u32 => Ok(Self::Snowball),
            x if x == Self::SpectralArrow as u32 => Ok(Self::SpectralArrow),
            x if x == Self::Spider as u32 => Ok(Self::Spider),
            x if x == Self::Squid as u32 => Ok(Self::Squid),
            x if x == Self::Stray as u32 => Ok(Self::Stray),
            x if x == Self::Strider as u32 => Ok(Self::Strider),
            x if x == Self::Tadpole as u32 => Ok(Self::Tadpole),
            x if x == Self::Egg as u32 => Ok(Self::Egg),
            x if x == Self::EnderPearl as u32 => Ok(Self::EnderPearl),
            x if x == Self::ExperienceBottle as u32 => Ok(Self::ExperienceBottle),
            x if x == Self::Potion as u32 => Ok(Self::Potion),
            x if x == Self::Trident as u32 => Ok(Self::Trident),
            x if x == Self::TraderLlama as u32 => Ok(Self::TraderLlama),
            x if x == Self::TropicalFish as u32 => Ok(Self::TropicalFish),
            x if x == Self::Turtle as u32 => Ok(Self::Turtle),
            x if x == Self::Vex as u32 => Ok(Self::Vex),
            x if x == Self::Villager as u32 => Ok(Self::Villager),
            x if x == Self::Vindicator as u32 => Ok(Self::Vindicator),
            x if x == Self::WanderingTrader as u32 => Ok(Self::WanderingTrader),
            x if x == Self::Warden as u32 => Ok(Self::Warden),
            x if x == Self::Witch as u32 => Ok(Self::Witch),
            x if x == Self::Wither as u32 => Ok(Self::Wither),
            x if x == Self::WitherSkeleton as u32 => Ok(Self::WitherSkeleton),
            x if x == Self::WitherSkull as u32 => Ok(Self::WitherSkull),
            x if x == Self::Wolf as u32 => Ok(Self::Wolf),
            x if x == Self::Zoglin as u32 => Ok(Self::Zoglin),
            x if x == Self::Zombie as u32 => Ok(Self::Zombie),
            x if x == Self::ZombieHorse as u32 => Ok(Self::ZombieHorse),
            x if x == Self::ZombieVillager as u32 => Ok(Self::ZombieVillager),
            x if x == Self::ZombifiedPiglin as u32 => Ok(Self::ZombifiedPiglin),
            x if x == Self::Player as u32 => Ok(Self::Player),
            x if x == Self::FishingBobber as u32 => Ok(Self::FishingBobber),
            _ => Err(Self::Error::EnumOutOfBound)
        }
    }
}
